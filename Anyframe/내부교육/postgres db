----------------------------------------------------------
----------------------common------------------------------
----------------------------------------------------------
-- Locale
CREATE TABLE AFT_LOCALE
(
  LOCALE_CD          VARCHAR(5)  NOT NULL ,
  LOCALE_NM          VARCHAR(100)  NOT NULL ,
  LOCALE_DISPLAY_NM  VARCHAR(100)  NULL,
  USE_YN             CHAR(1),
  DISPLAY_SEQ          CHAR(2),
  CONSTRAINT  AFT_LOCALE_PK PRIMARY KEY (LOCALE_CD)
);

CREATE TABLE AFT_APPLICATION
(
  APPL_ID VARCHAR(10) NOT NULL,
  APPL_NAME VARCHAR(90) NOT NULL,
  APPL_URL VARCHAR(250) NOT NULL,
  APPL_URL2 VARCHAR(250),
  CREATE_ID VARCHAR(20),
  CREATE_DATE VARCHAR(14),
  UPDATE_ID VARCHAR(20),
  UPDATE_DATE VARCHAR(14),
  CONSTRAINT AFT_APPLICATION_PK PRIMARY KEY(APPL_ID)
);

CREATE TABLE AFT_APPLICATION_LOCALE
(
  APPL_ID VARCHAR(10) NOT NULL,
  LOCALE VARCHAR(10) NOT NULL,
  APPL_NAME VARCHAR(250) NOT NULL,
  TENANT_ID VARCHAR(50) NOT NULL,
  CONSTRAINT AFT_APPLICATION_LOCALE_PK PRIMARY KEY(APPL_ID,LOCALE,TENANT_ID)
);

CREATE TABLE AFT_USER
(
  USER_ID VARCHAR(20) NOT NULL,
  PASSWORD VARCHAR(100) NOT NULL,
  USER_NAME VARCHAR(30) NOT NULL,
  TEL_NO VARCHAR(30),
  CELL_PHONE_NO VARCHAR(30),
  COMPANY_NAME VARCHAR(90),
  EMAIL VARCHAR(100),
  DEPT_NAME VARCHAR(90),
  POSITION VARCHAR(90),
  LOGIN_FAIL_COUNT INTEGER,
  CREATE_ID VARCHAR(20),
  CREATE_DATE VARCHAR(14),
  UPDATE_ID VARCHAR(20),
  UPDATE_DATE VARCHAR(14),
  CONSTRAINT AFT_USER_PK PRIMARY KEY (USER_ID)
);

CREATE TABLE AFT_CODE_GROUP
(
  APPL_ID VARCHAR(10) NOT NULL,
  CODE_GRP_ID VARCHAR(20) NOT NULL,
  CODE_GRP_NAME VARCHAR(50) NOT NULL,
  CODE_GRP_SEQ INTEGER,
  DESCRIPTION VARCHAR(200),
  CREATE_ID VARCHAR(20),
  CREATE_DATE VARCHAR(14),
  UPDATE_ID VARCHAR(20),
  UPDATE_DATE VARCHAR(14),
  USE_YN VARCHAR(1) NOT NULL,
  TENANT_ID VARCHAR(50) NOT NULL,
  CONSTRAINT AFT_CODE_GROUP_PK PRIMARY KEY (APPL_ID, CODE_GRP_ID, TENANT_ID)
);

CREATE TABLE AFT_CODE_GROUP_LOCALE
(
  APPL_ID VARCHAR(10) NOT NULL,
  CODE_GRP_ID VARCHAR(20) NOT NULL,
  LOCALE VARCHAR(10) NOT NULL,
  CODE_GRP_NAME VARCHAR(50) NOT NULL,
  TENANT_ID VARCHAR(50) NOT NULL,
  CONSTRAINT AFT_CODE_GROUP_LOCALE_PK PRIMARY KEY(APPL_ID,CODE_GRP_ID,LOCALE,TENANT_ID)
);

CREATE TABLE AFT_CODE
(
  APPL_ID VARCHAR(10) NOT NULL,
  CODE_GRP_ID VARCHAR(20) NOT NULL,
  CODE VARCHAR(20) NOT NULL,
  CODE_NAME VARCHAR(50) NOT NULL,
  CODE_SEQ INTEGER,
  DESCRIPTION VARCHAR(200),
  CREATE_ID VARCHAR(20),
  CREATE_DATE VARCHAR(14),
  UPDATE_ID VARCHAR(20),
  UPDATE_DATE VARCHAR(14),
  USE_YN VARCHAR(1) NOT NULL,
  TENANT_ID VARCHAR(50) NOT NULL,
  CONSTRAINT AFT_CODE_PK  PRIMARY KEY (APPL_ID, CODE_GRP_ID, CODE, TENANT_ID),
  CONSTRAINT AFT_CODE_FK01 FOREIGN KEY(APPL_ID, CODE_GRP_ID, TENANT_ID) REFERENCES AFT_CODE_GROUP(APPL_ID, CODE_GRP_ID, TENANT_ID)
);

CREATE TABLE AFT_CODE_LOCALE
(
  APPL_ID VARCHAR(10) NOT NULL,
  CODE_GRP_ID VARCHAR(20) NOT NULL,
  CODE VARCHAR(20) NOT NULL,
  LOCALE VARCHAR(10) NOT NULL,
  CODE_NAME VARCHAR(50) NOT NULL,
  TENANT_ID VARCHAR(50) NOT NULL,
  CONSTRAINT AFT_CODE_LOCALE_PK PRIMARY KEY(APPL_ID,CODE_GRP_ID,CODE,LOCALE,TENANT_ID)
);

CREATE TABLE AFT_TENANT
(
  TENANT_ID VARCHAR(50) NOT NULL,
  TENANT_NAME VARCHAR(90) NOT NULL,
  TENANT_GROUP_ID VARCHAR(20) NOT NULL,
  CREATE_ID VARCHAR(20),
  CREATE_DATE VARCHAR(14),
  UPDATE_ID VARCHAR(20),
  UPDATE_DATE VARCHAR(14),
  CONSTRAINT AFT_TENANT_PK PRIMARY KEY (TENANT_ID)
);

CREATE TABLE AFT_TENANT_GROUP
(
  TENANT_GROUP_ID VARCHAR(50) NOT NULL,
  TENANT_GROUP_NAME VARCHAR(90) NOT NULL,
  CREATE_ID VARCHAR(20),
  CREATE_DATE VARCHAR(14),
  UPDATE_ID VARCHAR(20),
  UPDATE_DATE VARCHAR(14),
  CONSTRAINT AFT_TENANT_GROUP_PK PRIMARY KEY (TENANT_GROUP_ID)
);

CREATE TABLE AFT_TENANT_APPL
(
  APPL_ID   VARCHAR(50),
  TENANT_ID VARCHAR(50),
  CONSTRAINT  AFT_TENANT_APPL_PK PRIMARY KEY (APPL_ID, TENANT_ID),
  CONSTRAINT AFT_TENANT_APPL_FK01 FOREIGN KEY(APPL_ID) REFERENCES AFT_APPLICATION(APPL_ID),
  CONSTRAINT AFT_TENANT_APPL_FK02 FOREIGN KEY(TENANT_ID) REFERENCES AFT_TENANT(TENANT_ID)
);

CREATE TABLE AFT_TENANT_USER
(
  USER_ID   VARCHAR(20) NOT NULL ,
  TENANT_ID VARCHAR(50) NOT NULL ,
  CONSTRAINT  AFT_TENANT_USER_PK PRIMARY KEY (USER_ID, TENANT_ID),
  CONSTRAINT AFT_TENANT_USER_FK01 FOREIGN KEY(USER_ID) REFERENCES AFT_USER(USER_ID),
  CONSTRAINT AFT_TENANT_USER_FK02 FOREIGN KEY(TENANT_ID) REFERENCES AFT_TENANT(TENANT_ID)
);

CREATE TABLE AFT_APPLICATION_USER_PROPERTY
(
  APPL_ID VARCHAR(10) NOT NULL,
  PROPERTY_ID VARCHAR(300) NOT NULL,
  PROPERTY_NAME VARCHAR(300) NOT NULL,
  PROPERTY_TYPE VARCHAR(300) NOT NULL,
  PROPERTY_CODE VARCHAR(300),
  TENANT_ID VARCHAR(50) NOT NULL,
  CONSTRAINT AFT_USER_PROPERTY_DEF_PK PRIMARY KEY (APPL_ID, PROPERTY_ID, TENANT_ID),
  CONSTRAINT AFT_USER_PROPERTY_DEF_FK01 FOREIGN KEY (APPL_ID) REFERENCES AFT_APPLICATION (APPL_ID),
  CONSTRAINT AFT_USER_PROPERTY_DEF_FK02 FOREIGN KEY (TENANT_ID) REFERENCES AFT_TENANT (TENANT_ID)
);

CREATE TABLE AFT_APPL_USER_PROPERTY_LOCALE
(
  APPL_ID VARCHAR(10) NOT NULL,
  PROPERTY_ID VARCHAR(300) NOT NULL,
  LOCALE VARCHAR(10) NOT NULL,
  PROPERTY_NAME VARCHAR(300) NOT NULL,
  TENANT_ID VARCHAR(50) NOT NULL,
  CONSTRAINT AFT_APPL_USER_PROP_LOCALE_PK PRIMARY KEY(APPL_ID,PROPERTY_ID,LOCALE,TENANT_ID)
);

CREATE TABLE AFT_USER_PROPERTY
(
  USER_ID VARCHAR(20) NOT NULL,
  APPL_ID VARCHAR(10) NOT NULL,
  PROPERTY_ID VARCHAR(300) NOT NULL,
  PROPERTY_VALUE VARCHAR(300),
  TENANT_ID VARCHAR(50) NOT NULL,
  CONSTRAINT AFT_USER_PROPERTY_PK PRIMARY KEY (USER_ID,APPL_ID, PROPERTY_ID, TENANT_ID),
  CONSTRAINT AFT_USER_PROPERTY_FK01 FOREIGN KEY (APPL_ID, PROPERTY_ID, TENANT_ID) REFERENCES AFT_APPLICATION_USER_PROPERTY (APPL_ID, PROPERTY_ID, TENANT_ID),
  CONSTRAINT AFT_USER_PROPERTY_FK02 FOREIGN KEY (USER_ID) REFERENCES AFT_USER (USER_ID)
);

CREATE TABLE AFT_ROLE
(
  ROLE_ID VARCHAR(10) NOT NULL,
  ROLE_NAME VARCHAR(90) NOT NULL,
  DESCRIPTION VARCHAR(600),
  CREATE_ID VARCHAR(20),
  CREATE_DATE VARCHAR(14),
  UPDATE_ID VARCHAR(20),
  UPDATE_DATE VARCHAR(14),
  TENANT_ID VARCHAR(50) NOT NULL,
  CONSTRAINT AFT_ROLE_PK PRIMARY KEY (ROLE_ID, TENANT_ID)
);

CREATE TABLE AFT_ROLE_LOCALE
(
  ROLE_ID VARCHAR(10) NOT NULL,
  LOCALE VARCHAR(10) NOT NULL,
  ROLE_NAME VARCHAR(90) NOT NULL,
  TENANT_ID VARCHAR(50) NOT NULL,
  CONSTRAINT AFT_ROLE_LOCALE_PK PRIMARY KEY(ROLE_ID,LOCALE,TENANT_ID)
);

CREATE TABLE AFT_USER_ROLE
(
  USER_ID VARCHAR(20) NOT NULL,
  ROLE_ID VARCHAR(10) NOT NULL,
  TENANT_ID VARCHAR(50) NOT NULL,
  CONSTRAINT AFT_USER_ROLE_PK PRIMARY KEY(USER_ID,ROLE_ID, TENANT_ID),
  CONSTRAINT AFT_USER_ROLE_FK01 FOREIGN KEY(USER_ID) REFERENCES AFT_USER(USER_ID),
  CONSTRAINT AFT_USER_ROLE_FK02 FOREIGN KEY(ROLE_ID, TENANT_ID) REFERENCES AFT_ROLE(ROLE_ID, TENANT_ID)
);

CREATE TABLE AFT_MENU
(
  MENU_ID VARCHAR(10) NOT NULL,
  PARENT_MENU_ID VARCHAR(10),
  MENU_NAME VARCHAR(90) NOT NULL,
  MENU_TYPE VARCHAR(30),
  MENU_LOAD_TYPE CHAR(1),
  MENU_LEVEL INTEGER,
  MENU_SEQ INTEGER,
  MENU_URL VARCHAR(250),
  LEAF_YN CHAR(1) DEFAULT 'Y',
  USE_YN CHAR(1) DEFAULT 'Y',
  CREATE_ID VARCHAR(20),
  CREATE_DATE VARCHAR(14),
  UPDATE_ID VARCHAR(20),
  UPDATE_DATE VARCHAR(14),
  APPL_ID VARCHAR(10) NOT NULL,
  TENANT_ID VARCHAR(50) NOT NULL,
  CONSTRAINT AFT_MENU_PK PRIMARY KEY(MENU_ID, TENANT_ID),
  CONSTRAINT AFT_MENU_FK01 FOREIGN KEY(APPL_ID) REFERENCES AFT_APPLICATION(APPL_ID),
  CONSTRAINT AFT_MENU_FK02 FOREIGN KEY(PARENT_MENU_ID, TENANT_ID) REFERENCES AFT_MENU(MENU_ID, TENANT_ID)
);

CREATE TABLE AFT_MENU_LOCALE
(
  MENU_ID VARCHAR(10) NOT NULL,
  LOCALE VARCHAR(10) NOT NULL,
  MENU_NAME VARCHAR(90) NOT NULL,
  TENANT_ID VARCHAR(50) NOT NULL,
  CONSTRAINT AFT_MENU_LOCALE_PK PRIMARY KEY(MENU_ID,LOCALE,TENANT_ID)
);

CREATE TABLE AFT_ROLE_MENU
(
  ROLE_ID VARCHAR(10) NOT NULL,
  MENU_ID VARCHAR(10) NOT NULL,
  TENANT_ID VARCHAR(50) NOT NULL,
  CONSTRAINT AFT_ROLE_MENU_PK PRIMARY KEY(ROLE_ID,MENU_ID, TENANT_ID),
  CONSTRAINT AFT_ROLE_MENU_FK01 FOREIGN KEY(ROLE_ID, TENANT_ID) REFERENCES AFT_ROLE(ROLE_ID, TENANT_ID),
  CONSTRAINT AFT_ROLE_MENU_FK02 FOREIGN KEY(MENU_ID, TENANT_ID) REFERENCES AFT_MENU(MENU_ID, TENANT_ID)
);

CREATE TABLE AFT_LOGIN_INFO
(
 SESSION_ID          VARCHAR(100)  NOT NULL ,
 USER_ID         VARCHAR(100)  NOT NULL ,
 TENANT_ID  VARCHAR(100)  NULL,
 CONSTRAINT  AFT_LOGIN_INFO_PK PRIMARY KEY (SESSION_ID)
);


CREATE TABLE AFM_DASHBOARD 
(	
 DASHBOARD_ID VARCHAR(10) NOT NULL, 
 TENANT_ID VARCHAR(50) NOT NULL, 
 USER_ID VARCHAR(20) NOT NULL, 
 DASHBOARD_NAME VARCHAR(300) NOT NULL, 
 CFG_VALUE VARCHAR(4000) NOT NULL, 
 APPL_TYPE_CD VARCHAR(50) NOT NULL, 
 SYS_DASHBOARD_YN VARCHAR(1) DEFAULT 'N' NOT NULL, 
 DEF_DASHBOARD_YN VARCHAR(1) DEFAULT 'N' NOT NULL, 
 DESCRIPTION VARCHAR(2000), 
 CREATE_ID VARCHAR(20) DEFAULT 'ADMIN' NOT NULL, 
 CREATE_IP VARCHAR(25) DEFAULT '127.0.0.1' NOT NULL, 
 CREATE_TS TIMESTAMP (6) DEFAULT CURRENT_DATE NOT NULL, 
 MODIFY_ID VARCHAR(20) DEFAULT 'ADMIN' NOT NULL, 
 MODIFY_IP VARCHAR(25) DEFAULT '127.0.0.1' NOT NULL, 
 MODIFY_TS TIMESTAMP (6) DEFAULT CURRENT_DATE NOT NULL, 
 CONSTRAINT AFM_DASHBOARD_PK PRIMARY KEY (DASHBOARD_ID)
);



-- Locale
INSERT INTO AFT_LOCALE (LOCALE_CD,LOCALE_NM,LOCALE_DISPLAY_NM,USE_YN,DISPLAY_SEQ) values ('ko_KR','Korean','한국어','Y','1');
INSERT INTO AFT_LOCALE (LOCALE_CD,LOCALE_NM,LOCALE_DISPLAY_NM,USE_YN,DISPLAY_SEQ) values ('en_US','English','English','Y','2');


-- Application
INSERT INTO AFT_APPLICATION ( APPL_ID, APPL_NAME, APPL_URL, CREATE_ID, CREATE_DATE, UPDATE_ID, UPDATE_DATE)
VALUES ( '9000', 'Manager', '/manager', 'system', '20130614000000', 'admin', '20130614000000');


-- Application Locale
INSERT INTO AFT_APPLICATION_LOCALE ( APPL_ID, LOCALE, APPL_NAME, TENANT_ID )
VALUES ('9000', 'ko_KR', '관리', 'tenantIdA');
INSERT INTO AFT_APPLICATION_LOCALE ( APPL_ID, LOCALE, APPL_NAME, TENANT_ID )
VALUES ('9000', 'en_US', 'Manager', 'tenantIdA');

-- User
INSERT INTO AFT_USER ( USER_ID, PASSWORD, USER_NAME, TEL_NO, CELL_PHONE_NO, COMPANY_NAME, EMAIL, DEPT_NAME, POSITION, CREATE_ID, CREATE_DATE)
VALUES ('admin', 'RsA0yro7l+RJTkXdZSNstKNqbpLXy8XF3uJhxRnTylCqLlZA6/n2PkPJmKCB7IXsCN2HzrY6y2Hr6jJWQZGOcA==', 'admin', NULL, NULL, NULL, NULL, NULL, NULL, 'system', '20130614000000');

-- Code Group
INSERT INTO AFT_CODE_GROUP(APPL_ID, CODE_GRP_ID, CODE_GRP_NAME, USE_YN, TENANT_ID) VALUES ('9000', 'PMS_USE_YN','Whether to use PMS','Y', 'tenantIdA');
-- Code Group Locale
INSERT into AFT_CODE_GROUP_LOCALE(APPL_ID, CODE_GRP_ID, LOCALE, CODE_GRP_NAME, TENANT_ID) VALUES ('9000', 'PMS_USE_YN', 'ko_KR','PMS사용여부', 'tenantIdA');
INSERT into AFT_CODE_GROUP_LOCALE(APPL_ID, CODE_GRP_ID, LOCALE, CODE_GRP_NAME, TENANT_ID) VALUES ('9000', 'PMS_USE_YN', 'en_US','Whether to use PMS', 'tenantIdA');
-- Code
INSERT INTO AFT_CODE(APPL_ID, CODE_GRP_ID, CODE, CODE_NAME, USE_YN, TENANT_ID) VALUES ('9000','PMS_USE_YN','USER_YN','Whether to use','N', 'tenantIdA');
-- Code Locale
INSERT INTO AFT_CODE_LOCALE(APPL_ID, CODE_GRP_ID, CODE, LOCALE, CODE_NAME, TENANT_ID) VALUES ('9000', 'PMS_USE_YN', 'USER_YN', 'ko_KR', '사용여부', 'tenantIdA');
INSERT INTO AFT_CODE_LOCALE(APPL_ID, CODE_GRP_ID, CODE, LOCALE, CODE_NAME, TENANT_ID) VALUES ('9000', 'PMS_USE_YN', 'USER_YN', 'en_US', 'Whether to use', 'tenantIdA');

-- Role
INSERT INTO AFT_ROLE(ROLE_ID, ROLE_NAME, DESCRIPTION, CREATE_ID, CREATE_DATE, TENANT_ID)
VALUES ('9000', 'Enterprise Manager', 'Enterprise Manager', 'system', '20130614000000', 'tenantIdA');


-- Role Locale
INSERT INTO AFT_ROLE_LOCALE(ROLE_ID,LOCALE,ROLE_NAME,TENANT_ID)
VALUES ('9000','ko_KR','Enterprise 관리자', 'tenantIdA');
INSERT INTO AFT_ROLE_LOCALE(ROLE_ID,LOCALE,ROLE_NAME,TENANT_ID)
VALUES ('9000','en_US','Enterprise Manager', 'tenantIdA');


-- User Role
INSERT INTO AFT_USER_ROLE(USER_ID,ROLE_ID,TENANT_ID) VALUES ('admin','9000', 'tenantIdA');


-- Menu
INSERT INTO AFT_MENU(MENU_ID,PARENT_MENU_ID,MENU_SEQ,MENU_NAME,USE_YN,CREATE_ID,APPL_ID,MENU_TYPE,TENANT_ID) VALUES ('8100',null,0,'Dashboard','Y','system','9000','MENU','tenantIdA');
INSERT INTO AFT_MENU(MENU_ID,PARENT_MENU_ID,MENU_SEQ,MENU_NAME,USE_YN,CREATE_ID,APPL_ID,MENU_TYPE,TENANT_ID) VALUES ('9000',null,5,'Manager','Y','system','9000','MENU','tenantIdA');
INSERT INTO AFT_MENU(MENU_ID,PARENT_MENU_ID,MENU_SEQ,MENU_NAME,USE_YN,CREATE_ID,APPL_ID,MENU_TYPE,TENANT_ID) VALUES ('9100','9000',1,'User Management','Y','system','9000','MENU','tenantIdA');
INSERT INTO AFT_MENU(MENU_ID,PARENT_MENU_ID,MENU_SEQ,MENU_NAME,USE_YN,CREATE_ID,APPL_ID,MENU_TYPE,TENANT_ID) VALUES ('9200','9000',2,'Role Management','Y','system','9000','MENU','tenantIdA');
INSERT INTO AFT_MENU(MENU_ID,PARENT_MENU_ID,MENU_SEQ,MENU_NAME,USE_YN,CREATE_ID,APPL_ID,MENU_TYPE,TENANT_ID) VALUES ('9300','9000',3,'Menu Management','Y','system','9000','MENU','tenantIdA');
INSERT INTO AFT_MENU(MENU_ID,PARENT_MENU_ID,MENU_SEQ,MENU_NAME,USE_YN,CREATE_ID,APPL_ID,MENU_TYPE,TENANT_ID) VALUES ('9400','9000',4,'Application Management','Y','system','9000','MENU','tenantIdA');
INSERT INTO AFT_MENU(MENU_ID,PARENT_MENU_ID,MENU_SEQ,MENU_NAME,USE_YN,CREATE_ID,APPL_ID,MENU_TYPE,TENANT_ID) VALUES ('9500','9000',5,'Code Management','Y','system','9000','MENU','tenantIdA');
-- INSERT INTO AFT_MENU(MENU_ID,PARENT_MENU_ID,MENU_SEQ,MENU_NAME,USE_YN,CREATE_ID,APPL_ID,MENU_TYPE,TENANT_ID) VALUES ('9600','9000',6,'Locale Management','Y','system','9000','MENU','tenantIdA');
INSERT INTO AFT_MENU(MENU_ID,PARENT_MENU_ID,MENU_SEQ,MENU_NAME,USE_YN,CREATE_ID,APPL_ID,MENU_TYPE,TENANT_ID) VALUES ('9700','9000',6,'Dashboard Management','Y','system','9000','MENU','tenantIdA');
INSERT INTO AFT_MENU(MENU_ID,PARENT_MENU_ID,MENU_SEQ,MENU_NAME,USE_YN,CREATE_ID,APPL_ID,MENU_TYPE,TENANT_ID) VALUES ('9600','9000',7,'Log Check','Y','system','9000','MENU','tenantIdA');

-- Menu Locale
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('8100','ko_KR','대시보드', 'tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('9000','ko_KR','관리', 'tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('9100','ko_KR','업무 사용자 관리', 'tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('9200','ko_KR','권한 관리', 'tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('9300','ko_KR','메뉴 관리', 'tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('9400','ko_KR','제품 관리', 'tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('9500','ko_KR','코드 관리', 'tenantIdA');
-- INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('9600','ko_KR','로케일관리', 'tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('9600','ko_KR','로그 조회','tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('9700','ko_KR','대시보드 관리','tenantIdA');

INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('8100','en_US','Dashboard', 'tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('9000','en_US','Manager', 'tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('9100','en_US','User Management', 'tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('9200','en_US','Role Management', 'tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('9300','en_US','Menu Management', 'tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('9400','en_US','Application Management', 'tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('9500','en_US','Code Management', 'tenantIdA');
-- INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('9600','en_US','Locale Management', 'tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('9600','en_US','Log Check','tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('9700','en_US','Dashboard Management','tenantIdA');

-- Role-Menu
INSERT INTO AFT_ROLE_MENU(ROLE_ID, MENU_ID, TENANT_ID) VALUES ('9000', '9000', 'tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID, MENU_ID, TENANT_ID) VALUES ('9000', '9100', 'tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID, MENU_ID, TENANT_ID) VALUES ('9000', '9200', 'tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID, MENU_ID, TENANT_ID) VALUES ('9000', '9300', 'tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID, MENU_ID, TENANT_ID) VALUES ('9000', '9400', 'tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID, MENU_ID, TENANT_ID) VALUES ('9000', '9500', 'tenantIdA');
-- INSERT INTO AFT_ROLE_MENU(ROLE_ID, MENU_ID, TENANT_ID) VALUES ('9000', '9600', 'tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID, MENU_ID, TENANT_ID) VALUES ('9000', '9600', 'tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID, MENU_ID, TENANT_ID) VALUES ('9000', '8100', 'tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID, MENU_ID, TENANT_ID) VALUES ('9000', '9700', 'tenantIdA');





-------------------- Tenant add data ----------------------------------------------------------------------------
-- INSERT INTO AFT_APPLICATION ( APPL_ID, APPL_NAME, APPL_URL, CREATE_ID, CREATE_DATE, UPDATE_ID, UPDATE_DATE ) VALUES ( '90000', 'Tenant Manager', ' ', 'system', '20130614000000', 'admin', '20130614000000');

-- Application Locale
-- INSERT INTO AFT_APPLICATION_LOCALE ( APPL_ID, LOCALE, APPL_NAME, TENANT_ID ) VALUES ('90000', 'ko_KR', '업무 관리자', 'tenantIdA');
-- INSERT INTO AFT_APPLICATION_LOCALE ( APPL_ID, LOCALE, APPL_NAME, TENANT_ID ) VALUES ('90000', 'en_US', 'Tenant Manager', 'tenantIdA');

-- INSERT INTO AFT_ROLE(ROLE_ID, ROLE_NAME, DESCRIPTION, CREATE_ID, CREATE_DATE, TENANT_ID) VALUES ('90000', 'Tenant Manager', 'Tenant Manager', 'system', '20130614000000', 'tenantIdA');

-- Role Locale
--INSERT INTO AFT_ROLE_LOCALE(ROLE_ID,LOCALE,ROLE_NAME,TENANT_ID) VALUES ('90000','ko_KR','업무 관리자', 'tenantIdA');
--INSERT INTO AFT_ROLE_LOCALE(ROLE_ID,LOCALE,ROLE_NAME,TENANT_ID) VALUES ('90000','en_US','Tenant Manager', 'tenantIdA');

-- User Role
--INSERT INTO AFT_USER_ROLE(USER_ID,ROLE_ID,TENANT_ID) VALUES ('admin','90000','tenantIdA');


--INSERT INTO AFT_MENU(MENU_ID,PARENT_MENU_ID,MENU_NAME,USE_YN,CREATE_ID,APPL_ID,MENU_TYPE,TENANT_ID) VALUES ('90000',null,'Tenant Manager','Y','system','90000','MENU','tenantIdA');
--INSERT INTO AFT_MENU(MENU_ID,PARENT_MENU_ID,MENU_NAME,USE_YN,CREATE_ID,APPL_ID,MENU_TYPE,TENANT_ID) VALUES ('91000','90000','Tenant Group Management','Y','system','90000','MENU','tenantIdA');
--INSERT INTO AFT_MENU(MENU_ID,PARENT_MENU_ID,MENU_NAME,USE_YN,CREATE_ID,APPL_ID,MENU_TYPE,TENANT_ID) VALUES ('92000','90000','Tenant Management','Y','system','90000','MENU','tenantIdA');
--INSERT INTO AFT_MENU(MENU_ID,PARENT_MENU_ID,MENU_NAME,USE_YN,CREATE_ID,APPL_ID,MENU_TYPE,TENANT_ID) VALUES ('93000','90000','Tenant Management By User','Y','system','90000','MENU','tenantIdA');

--INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('90000','ko_KR','업무 관리자','tenantIdA');
--INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('91000','ko_KR','업무 그룹 관리','tenantIdA');
--INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('92000','ko_KR','업무 관리','tenantIdA');
--INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('93000','ko_KR','사용자별 업무 관리','tenantIdA');


--INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('90000','en_US','Tenant Manager','tenantIdA');
--INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('91000','en_US','Tenant Group Management','tenantIdA');
--INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('92000','en_US','Tenant Management','tenantIdA');
--INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('93000','en_US','Tenant Management By User','tenantIdA');


--INSERT INTO AFT_ROLE_MENU(ROLE_ID, MENU_ID, TENANT_ID) VALUES ('90000', '90000', 'tenantIdA');
--INSERT INTO AFT_ROLE_MENU(ROLE_ID, MENU_ID, TENANT_ID) VALUES ('90000', '91000', 'tenantIdA');
--INSERT INTO AFT_ROLE_MENU(ROLE_ID, MENU_ID, TENANT_ID) VALUES ('90000', '92000', 'tenantIdA');
--INSERT INTO AFT_ROLE_MENU(ROLE_ID, MENU_ID, TENANT_ID) VALUES ('90000', '93000', 'tenantIdA');

-- insert basic data into AFT_TENANT_GROUP
INSERT INTO AFT_TENANT_GROUP(TENANT_GROUP_ID,TENANT_GROUP_NAME) VALUES ('tenantGroupIdA', 'tenantGroupNameA');

-- insert basic data into AFT_TENANT
INSERT INTO AFT_TENANT(TENANT_ID, TENANT_NAME, TENANT_GROUP_ID) VALUES ('tenantIdA', 'tenantNameA', 'tenantGroupIdA');

-- insert basic data into AFT_TENANT_APPL
INSERT INTO AFT_TENANT_APPL(APPL_ID, TENANT_ID) VALUES ('9000', 'tenantIdA');
--INSERT INTO AFT_TENANT_APPL(APPL_ID, TENANT_ID) VALUES ('90000', 'tenantIdA');

-- insert basic data into AFT_TENANT_APPL
INSERT INTO AFT_TENANT_USER(USER_ID, TENANT_ID) VALUES ('admin','tenantIdA');

ALTER TABLE AFT_USER ADD SYSTEM_ADMIN CHAR(1) DEFAULT 0 ;

update AFT_USER set system_admin = 1 where user_id = 'admin';

UPDATE AFT_ROLE_LOCALE SET ROLE_NAME = '업무 관리자' where role_id = '9000' and locale = 'ko_KR';

-- 20200107
ALTER TABLE AFT_LOGIN_INFO ADD LAST_UPDATED TIMESTAMP;


----------------------------------------------------------
----------------------online------------------------------
----------------------------------------------------------

CREATE TABLE DOMAIN_CONFIGURATION (
	DOMAIN_ID VARCHAR(500),
	SERVER_CONFIG_ID VARCHAR(200),
	SERVICE_CONFIG_ID VARCHAR(200),
	TENANT_ID VARCHAR(50) NOT NULL,
	CONSTRAINT DOMAIN_CONFIGURATION_PK PRIMARY KEY(TENANT_ID, DOMAIN_ID)
);

CREATE TABLE INSTANCE_CONFIGURATION (
	ID VARCHAR(200),
	DOMAIN_ID VARCHAR(500),
	INSTANCE_ID VARCHAR(500),
	IP VARCHAR(200),
	PORT VARCHAR(6),
	START_TIME CHAR(14),
	JMX_URL VARCHAR(500),
	SERVER_CONFIG_ID VARCHAR(200),
	SERVICE_CONFIG_ID VARCHAR(200),
	INVOKE_URL VARCHAR(200),
	TENANT_ID VARCHAR(50) NOT NULL,
	CONSTRAINT INSTANCE_CONFIGURATION_PK PRIMARY KEY (TENANT_ID, DOMAIN_ID, INSTANCE_ID)
);

CREATE TABLE SERVER_CONFIGURATION (
	ID VARCHAR(200),
	TOTAL_CAPACITY DECIMAL(10),
	BLOCKED CHAR(1),
	START_TIME CHAR(14),
	END_TIME CHAR(14),
	IP_LOG_ENABLED CHAR(1),
	IP_LOG_LEVEL VARCHAR(10),
	ID_LOG_ENABLED CHAR(1),
	ID_LOG_LEVEL VARCHAR(10),
	SERVICE_LOG_ENABLED CHAR(1),
	SERVICE_LOG_LEVEL VARCHAR(10),
	BIZ_EXCEPTION_IS_FAILURE CHAR(1),
	IP_LOG_OPT_ENABLED CHAR(1),
	ID_LOG_OPT_ENABLED CHAR(1),
    TRACE_LOG_ENABLED CHAR(1),
    TRACE_LOG_LEVEL VARCHAR(10),
    ERROR_CODE VARCHAR(20),
    ERROR_MESSAGE VARCHAR(2000),
	CONSTRAINT SERVER_CONFIGURATION_PK PRIMARY KEY (ID)
);

CREATE TABLE LOG_CONFIGURATION (
	ID VARCHAR(200) NOT NULL,
	LOG_TYPE VARCHAR(10) NOT NULL,
	LOG_KEY VARCHAR(4000) NOT NULL,
	LOG_LEVEL VARCHAR(10),
	EXPIRE_TIME TIMESTAMP,
	REMARK VARCHAR(1000),
	CONSTRAINT LOG_CONFIGURATION_PK PRIMARY KEY (ID, LOG_TYPE, LOG_KEY)
);

CREATE TABLE DOMAIN_SERVICE (
	DOMAIN_ID VARCHAR(500),
	SERVICE_ID VARCHAR(2000),
	SERVICE_CONFIG_ID VARCHAR(200),
	CONSTRAINT DOMAIN_SERVICE_PK PRIMARY KEY (DOMAIN_ID,SERVICE_ID)
);

CREATE TABLE INSTANCE_SERVICE (
	DOMAIN_ID VARCHAR(500),
	INSTANCE_ID VARCHAR(500),
	SERVICE_ID VARCHAR(2000),
	SERVICE_CONFIG_ID VARCHAR(200),
	CONSTRAINT INSTANCE_SERVICE_PK PRIMARY KEY (DOMAIN_ID,INSTANCE_ID,SERVICE_ID)
);

CREATE TABLE SERVICE_CONFIGURATION (
	ID VARCHAR(200),
	ENABLE CHAR(1),
	CAPACITY DECIMAL(10),
	TIMEOUT DECIMAL(10),
	START_TIME CHAR(14),
	END_TIME CHAR(14),
	LOG_LEVEL VARCHAR(10),
	LOG_ENABLED CHAR(1),
    TRACE_LOG_ENABLED CHAR(1),
    TRACE_LOG_LEVEL VARCHAR(10),
    RESOURCE_URL_BLOCKED CHAR(1),
    RESOURCE_URL VARCHAR(2000),
    RESOURCE_URL_DESCRIPTION VARCHAR(2000),
    RESOURCE_ID_BLOCKED CHAR(1),
    RESOURCE_ID VARCHAR(2000),
    RESOURCE_ID_DESCRIPTION VARCHAR(2000),
    RESOURCE_IP_BLOCKED CHAR(1),
    RESOURCE_IP VARCHAR(2000),
    RESOURCE_IP_DESCRIPTION VARCHAR(2000),
    ERROR_CODE VARCHAR(20),
    ERROR_MESSAGE VARCHAR(2000),
	CONSTRAINT SERVICE_CONFIGURATION_PK PRIMARY KEY (ID)
);

CREATE TABLE SERVICE_HISTORY (
	DOMAIN_ID VARCHAR(500),
	INSTANCE_ID VARCHAR(500),
	EXECUTION_ID VARCHAR(2000),
	SERVICE_ID VARCHAR(2000),
	BEAN_NAME VARCHAR(500),
	METHOD_NAME VARCHAR(500),
	START_TIME CHAR(14),
	ELAPSED_TIME DECIMAL(30),
	SUCCESS CHAR(1),
	ARGUMENTS TEXT,
	STACK_TRACE TEXT,
	TENANT_ID VARCHAR(50) NOT NULL,
    TRACE_LOG CHAR(1)
);

CREATE TABLE EVENT_HISTORY (
	DOMAIN_ID VARCHAR(500),
	INSTANCE_ID VARCHAR(500),
	EXECUTION_ID VARCHAR(2000),
	EVENT_NAME VARCHAR(500),
	EVENT_OCCUR_TIME VARCHAR(100),
	EVENT_DESCRIPTION TEXT,
	TENANT_ID VARCHAR(50) NOT NULL
);

CREATE TABLE SERVICE_MASTER_CONFIGURATION (
	SERVICE_ID VARCHAR(200),
	SERVICE_CONFIG_ID VARCHAR(2000),
	HAS_ADDITIONAL_CONFIG CHAR(1) DEFAULT 0,
	TENANT_ID VARCHAR(50) NOT NULL
);

CREATE TABLE CLASSPATH_INFO (
	CLASSPATH VARCHAR(4000),
	JAR_PATH VARCHAR(4000),
	SCAN_PACKAGE VARCHAR(4000),
	TENANT_ID VARCHAR(50) NOT NULL
);

CREATE TABLE SERVICE_META (
	SERVICE_ID VARCHAR(200),
	BEAN_NAME VARCHAR(400),
	CLASS_LOCAL_NAME VARCHAR(4000),
	METHOD_NAME VARCHAR(400),
	METHOD_LOCAL_NAME VARCHAR(4000),
	ARGUMENTS VARCHAR(4000),
	RETURN_TYPE VARCHAR(4000),
	TENANT_ID VARCHAR(50) NOT NULL,
	CONSTRAINT SERVICE_META_PK PRIMARY KEY(TENANT_ID, SERVICE_ID, BEAN_NAME, METHOD_NAME)
);

CREATE TABLE DEFAULT_SERVICE_CONFIGURATION (
	ENABLE CHAR(1),
	CAPACITY DECIMAL(10),
	TIMEOUT DECIMAL(10),
	START_TIME CHAR(14),
	END_TIME CHAR(14),
	LOG_LEVEL VARCHAR(10),
	LOG_ENABLED CHAR(1),
    TRACE_LOG_ENABLED CHAR(1),
    TRACE_LOG_LEVEL VARCHAR(10),
    RESOURCE_URL_BLOCKED CHAR(1),
    RESOURCE_URL VARCHAR(2000),
    RESOURCE_URL_DESCRIPTION VARCHAR(2000),
    RESOURCE_ID_BLOCKED CHAR(1),
    RESOURCE_ID VARCHAR(2000),
    RESOURCE_ID_DESCRIPTION VARCHAR(2000),
    RESOURCE_IP_BLOCKED CHAR(1),
    RESOURCE_IP VARCHAR(2000),
    RESOURCE_IP_DESCRIPTION VARCHAR(2000),
    ERROR_CODE VARCHAR(20),
    ERROR_MESSAGE VARCHAR(2000),
    TENANT_ID VARCHAR(50) NOT NULL
);

CREATE TABLE USER_SUMMARY (
	USER_ID VARCHAR(200),
	USER_NAME VARCHAR(2000),
	DESCRIPTION VARCHAR(2000),
	CONSTRAINT USER_SUMMARY_PK PRIMARY KEY(USER_ID)
);

CREATE TABLE CHANNEL (
	ID VARCHAR(200),
	CHANNEL_TYPE VARCHAR(200),
	BLOCKED CHAR(1)
);

CREATE TABLE SERVER_CONFIGURATION_PATTERN (
    ID VARCHAR(200),
    SERVER_CONFIGURATION_ID VARCHAR(200),
    DATE_UNIT VARCHAR(10),
    DAY CHAR(2),
    START_TIME CHAR(5),
    END_TIME CHAR(5),
    CONSTRAINT SERVER_CONFIG_PATTERN_PK PRIMARY KEY ( ID,SERVER_CONFIGURATION_ID )
);

ALTER TABLE SERVER_CONFIGURATION_PATTERN
  ADD CONSTRAINT SERVER_CONFIG_PATTERN_FK FOREIGN KEY ( SERVER_CONFIGURATION_ID )
      REFERENCES SERVER_CONFIGURATION ( ID );

CREATE TABLE SERVICE_CONFIGURATION_PATTERN (
    ID VARCHAR(200),
    SERVICE_CONFIGURATION_ID VARCHAR(200),
    DATE_UNIT VARCHAR(10),
    DAY CHAR(2),
    START_TIME CHAR(5),
    END_TIME CHAR(5),
    CONSTRAINT SERVICE_CONFIG_PATTERN_PK PRIMARY KEY ( ID,SERVICE_CONFIGURATION_ID )
);

ALTER TABLE SERVICE_CONFIGURATION_PATTERN
    ADD CONSTRAINT SERVICE_CONFIG_PATTERN_FK FOREIGN KEY ( SERVICE_CONFIGURATION_ID )
        REFERENCES SERVICE_CONFIGURATION ( ID );
        
CREATE TABLE DEFAULT_SERVICE_CONFIG_PATTERN (
    ID VARCHAR(200),
    DATE_UNIT VARCHAR(10),
    DAY CHAR(2),
    START_TIME CHAR(5),
    END_TIME CHAR(5),
    TENANT_ID VARCHAR(50) NOT NULL
);

CREATE TABLE TELEGRAM_PATH_INFO (
    PACKAGE_NAME VARCHAR(4000),
    CLASS_NAME VARCHAR(100)
);

CREATE TABLE SERVICE_MSG
(
    EXECUTION_ID VARCHAR(2000),
    MSG_TYPE VARCHAR(10),
    SEQ_NO NUMERIC(5),
    CONTENT_TYPE VARCHAR(20),
    MSG VARCHAR(4000),
    RECEIVED_TIME CHAR(14)
);
CREATE INDEX SERVICE_MSG_IDX ON SERVICE_MSG ( EXECUTION_ID, MSG_TYPE, SEQ_NO );
CREATE INDEX SERVICE_MSG_TIME_IDX ON SERVICE_MSG ( RECEIVED_TIME );


INSERT INTO AFT_APPLICATION (APPL_ID,APPL_NAME,APPL_URL,APPL_URL2,CREATE_ID) VALUES ('5000','Online','/online','','system');

INSERT INTO AFT_MENU (MENU_ID,PARENT_MENU_ID,MENU_NAME,MENU_TYPE,MENU_LOAD_TYPE,MENU_LEVEL,MENU_SEQ,MENU_URL,LEAF_YN,USE_YN,CREATE_ID,CREATE_DATE,UPDATE_ID,UPDATE_DATE,APPL_ID,TENANT_ID) values ('5000',null,'Online','MENU',null,null,1,null,'Y','Y','system',null,null,null,'5000','tenantIdA');
INSERT INTO AFT_MENU (MENU_ID,PARENT_MENU_ID,MENU_NAME,MENU_TYPE,MENU_LOAD_TYPE,MENU_LEVEL,MENU_SEQ,MENU_URL,LEAF_YN,USE_YN,CREATE_ID,CREATE_DATE,UPDATE_ID,UPDATE_DATE,APPL_ID,TENANT_ID) values ('5010','5000','Online Dashboard','MENU',null,null,1,null,'Y','Y','system',null,null,null,'5000','tenantIdA');
INSERT INTO AFT_MENU (MENU_ID,PARENT_MENU_ID,MENU_NAME,MENU_TYPE,MENU_LOAD_TYPE,MENU_LEVEL,MENU_SEQ,MENU_URL,LEAF_YN,USE_YN,CREATE_ID,CREATE_DATE,UPDATE_ID,UPDATE_DATE,APPL_ID,TENANT_ID) values ('5100','5000','Server Execution','MENU',null,null,2,null,'Y','Y','system',null,null,null,'5000','tenantIdA');
INSERT INTO AFT_MENU (MENU_ID,PARENT_MENU_ID,MENU_NAME,MENU_TYPE,MENU_LOAD_TYPE,MENU_LEVEL,MENU_SEQ,MENU_URL,LEAF_YN,USE_YN,CREATE_ID,CREATE_DATE,UPDATE_ID,UPDATE_DATE,APPL_ID,TENANT_ID) values ('5200','5000','Domain Management','MENU',null,null,3,null,'Y','Y','system',null,null,null,'5000','tenantIdA');
INSERT INTO AFT_MENU (MENU_ID,PARENT_MENU_ID,MENU_NAME,MENU_TYPE,MENU_LOAD_TYPE,MENU_LEVEL,MENU_SEQ,MENU_URL,LEAF_YN,USE_YN,CREATE_ID,CREATE_DATE,UPDATE_ID,UPDATE_DATE,APPL_ID,TENANT_ID) values ('5300','5000','Service Meta','MENU',null,null,4,null,'Y','Y','system',null,null,null,'5000','tenantIdA');
INSERT INTO AFT_MENU (MENU_ID,PARENT_MENU_ID,MENU_NAME,MENU_TYPE,MENU_LOAD_TYPE,MENU_LEVEL,MENU_SEQ,MENU_URL,LEAF_YN,USE_YN,CREATE_ID,CREATE_DATE,UPDATE_ID,UPDATE_DATE,APPL_ID,TENANT_ID) values ('5400','5000','Service Control','MENU',null,null,5,null,'Y','Y','system',null,null,null,'5000','tenantIdA');
INSERT INTO AFT_MENU (MENU_ID,PARENT_MENU_ID,MENU_NAME,MENU_TYPE,MENU_LOAD_TYPE,MENU_LEVEL,MENU_SEQ,MENU_URL,LEAF_YN,USE_YN,CREATE_ID,CREATE_DATE,UPDATE_ID,UPDATE_DATE,APPL_ID,TENANT_ID) values ('5500','5000','Transaction History','MENU',null,null,6,null,'Y','Y','system',null,null,null,'5000','tenantIdA');
INSERT INTO AFT_MENU (MENU_ID,PARENT_MENU_ID,MENU_NAME,MENU_TYPE,MENU_LOAD_TYPE,MENU_LEVEL,MENU_SEQ,MENU_URL,LEAF_YN,USE_YN,CREATE_ID,CREATE_DATE,UPDATE_ID,UPDATE_DATE,APPL_ID,TENANT_ID) values ('5502','5000','Transaction Control Status','MENU',null,null,7,null,'Y','Y','system',null,null,null,'5000','tenantIdA');
INSERT INTO AFT_MENU (MENU_ID,PARENT_MENU_ID,MENU_NAME,MENU_TYPE,MENU_LOAD_TYPE,MENU_LEVEL,MENU_SEQ,MENU_URL,LEAF_YN,USE_YN,CREATE_ID,CREATE_DATE,UPDATE_ID,UPDATE_DATE,APPL_ID,TENANT_ID) values ('5503','5000','Transaction Telegram Layout','MENU',null,null,8,null,'Y','Y','system',null,null,null,'5000','tenantIdA');
--INSERT INTO AFT_MENU (MENU_ID,PARENT_MENU_ID,MENU_NAME,MENU_TYPE,MENU_LOAD_TYPE,MENU_LEVEL,MENU_SEQ,MENU_URL,LEAF_YN,USE_YN,CREATE_ID,CREATE_DATE,UPDATE_ID,UPDATE_DATE,APPL_ID,TENANT_ID) values ('5920','5000','Log Check', 'MENU', NULL, NULL, 9, NULL, 'Y', 'Y', 'system', NULL, NULL, NULL, '5000','tenantIdA');
--Insert into AFT_MENU (MENU_ID,PARENT_MENU_ID,MENU_NAME,MENU_TYPE,MENU_LOAD_TYPE,MENU_LEVEL,MENU_SEQ,MENU_URL,LEAF_YN,USE_YN,CREATE_ID,CREATE_DATE,UPDATE_ID,UPDATE_DATE,APPL_ID) values ('6610','6000','송수신로그 조회','MENU',null,null,null,null,'Y','Y','system',null,'admin',null,'6000');
--Insert into AFT_MENU (MENU_ID,PARENT_MENU_ID,MENU_NAME,MENU_TYPE,MENU_LOAD_TYPE,MENU_LEVEL,MENU_SEQ,MENU_URL,LEAF_YN,USE_YN,CREATE_ID,CREATE_DATE,UPDATE_ID,UPDATE_DATE,APPL_ID) values ('6620','6000','거래전문 로그','MENU',null,null,null,null,'Y','Y','system',null,'admin',null,'6000');
--Insert into AFT_MENU (MENU_ID,PARENT_MENU_ID,MENU_NAME,MENU_TYPE,MENU_LOAD_TYPE,MENU_LEVEL,MENU_SEQ,MENU_URL,LEAF_YN,USE_YN,CREATE_ID,CREATE_DATE,UPDATE_ID,UPDATE_DATE,APPL_ID) values ('6700','6000','DWIO 관리','MENU',null,null,null,null,'Y','Y','system',null,null,null,'6000');

INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('9000','5000','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('9000','5010','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('9000','5100','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('9000','5200','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('9000','5300','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('9000','5400','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('9000','5500','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('9000','5502','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('9000','5503','tenantIdA');
--INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('9000','5920','tenantIdA');

INSERT INTO AFT_TENANT_APPL (APPL_ID, TENANT_ID) VALUES('5000', 'tenantIdA');

--INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID) VALUES ('9000','6610');
--INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID) VALUES ('9000','6620');
--INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID) VALUES ('9000','6700');

INSERT INTO AFT_APPLICATION_LOCALE(APPL_ID,LOCALE,APPL_NAME,TENANT_ID) VALUES ('5000','ko_KR','온라인','tenantIdA');
INSERT INTO AFT_APPLICATION_LOCALE(APPL_ID,LOCALE,APPL_NAME,TENANT_ID) VALUES ('5000','en_US','Online','tenantIdA');

INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('5000','ko_KR','온라인','tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('5010','ko_KR','온라인 대시보드','tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('5100','ko_KR','서버 실행 현황','tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('5200','ko_KR','도메인 관리','tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('5300','ko_KR','서비스 메타 목록','tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('5400','ko_KR','서비스 제어','tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('5500','ko_KR','거래 내역','tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('5502','ko_KR','거래 제어 현황','tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('5503','ko_KR','거래 전문 레이아웃 조회','tenantIdA');
--INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('5920','ko_KR','로그 조회','tenantIdA');

INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('5000','en_US','Online','tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('5010','en_US','Online Dashboard','tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('5100','en_US','Server Execution','tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('5200','en_US','Domain Management','tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('5300','en_US','Service Meta','tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('5400','en_US','Service Control','tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('5500','en_US','Transaction History','tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('5502','en_US','Transaction Control Status','tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('5503','en_US','Transaction Telegram Layout','tenantIdA');
--INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('5920','en_US','Log Check','tenantIdA');


INSERT INTO AFT_ROLE(ROLE_ID, ROLE_NAME, DESCRIPTION, CREATE_ID, CREATE_DATE, TENANT_ID)
VALUES ('5000', 'Online Manager', 'Online Manager', 'system', '20130614000000', 'tenantIdA');

INSERT INTO AFT_ROLE_LOCALE(ROLE_ID,LOCALE,ROLE_NAME,TENANT_ID)
VALUES ('5000','ko_KR','온라인 관리자', 'tenantIdA');
INSERT INTO AFT_ROLE_LOCALE(ROLE_ID,LOCALE,ROLE_NAME,TENANT_ID)
VALUES ('5000','en_US','Online Manager', 'tenantIdA');

INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('5000','5000','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('5000','5010','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('5000','5100','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('5000','5200','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('5000','5300','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('5000','5400','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('5000','5500','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('5000','5502','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('5000','5503','tenantIdA');
--INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('5000','5920','tenantIdA');


----------------------------------------------------------
----------------------batch------------------------------
----------------------------------------------------------

-- BATCH RUNTIME DDL
CREATE TABLE BATCH_JOB_EXECUTION
(
  JOB_ID					    NUMERIC(19)		NOT NULL,
  JOB_NAME					  VARCHAR(500)	NOT NULL,
  STATUS					    VARCHAR(20),
  EXIT_MESSAGE				VARCHAR(2500),
  LOG_FILE					  VARCHAR(500),
  SHORT_CONTEXT 			VARCHAR(2500),
  SERIALIZED_CONTEXT  TEXT,
  THREAD_COUNT			  NUMERIC(4),
  CPU_CURRENT				  NUMERIC(10,5),
  CPU_AVERAGE				  NUMERIC(10,5),
  MEMORY_TOTAL			  NUMERIC(20),
  MEMORY_FREE				  NUMERIC(20),
  CREATE_TIME				  TIMESTAMP(6),
  UPDATE_TIME				  TIMESTAMP(6),
  VERSION 					  NUMERIC(19,0),
  JOB_KEY					    VARCHAR(2500),
  JOB_TYPE					  VARCHAR(30),
  JOB_LOCATION			  VARCHAR(500),
  JOB_ARGUMENT		    VARCHAR(2500),
  JOB_EXEC_YN			    VARCHAR(1),
  SERVER					    VARCHAR(100),
  IP						      VARCHAR(20),
  PID						      VARCHAR(30),
  MONITOR_CHECK_YN	  CHAR(1),
  COMMAND					    VARCHAR(1000),
  OPERATION_DATE      VARCHAR(10),    -- 해당 OPERATION_DATE 추가,
  JOB_EXECUTION_KEY   VARCHAR(100),   -- 배치 런타임 KEY 커스터마이징한 구조로
  RUNTIME_INSTANCE_NAME VARCHAR(100), -- 인스턴스 배치 실행시 작업 초기화 위해서..
  STEP_TOTAL DECIMAL(5,0),            -- 총 스텝 개수 저장
  SCHEDULE_TIME TIMESTAMP(6),
  TIMEZONE_ID VARCHAR(100),
  TENANT_ID VARCHAR(50) NOT NULL
);

CREATE UNIQUE INDEX BATCH_JOB_EXECUTION_PK ON BATCH_JOB_EXECUTION
(JOB_ID);

CREATE INDEX BATCH_JOB_EXECUTION_I1 ON BATCH_JOB_EXECUTION
(JOB_NAME, STATUS);

CREATE INDEX BATCH_JOB_EXECUTION_I2 ON BATCH_JOB_EXECUTION
(CREATE_TIME);

CREATE INDEX BATCH_JOB_EXECUTION_I3 ON BATCH_JOB_EXECUTION
(SERVER, STATUS, JOB_EXEC_YN, JOB_TYPE, JOB_ID);

CREATE INDEX BATCH_JOB_EXECUTION_I4 on BATCH_JOB_EXECUTION
(SERVER, STATUS, JOB_EXEC_YN, JOB_TYPE, CREATE_TIME);

CREATE INDEX BATCH_JOB_EXECUTION_I5 on BATCH_JOB_EXECUTION
(STATUS, JOB_TYPE, CREATE_TIME);

--
CREATE INDEX BATCH_JOB_EXECUTION_I6 ON BATCH_JOB_EXECUTION
(JOB_ID, TENANT_ID);

CREATE INDEX BATCH_JOB_EXECUTION_I7 ON BATCH_JOB_EXECUTION
(JOB_NAME, STATUS, TENANT_ID);

CREATE INDEX BATCH_JOB_EXECUTION_I8 ON BATCH_JOB_EXECUTION
(CREATE_TIME, TENANT_ID);

CREATE INDEX BATCH_JOB_EXECUTION_I9 ON BATCH_JOB_EXECUTION
(SERVER, STATUS, JOB_EXEC_YN, JOB_TYPE, JOB_ID, TENANT_ID);

CREATE INDEX BATCH_JOB_EXECUTION_I10 on BATCH_JOB_EXECUTION
(SERVER, STATUS, JOB_EXEC_YN, JOB_TYPE, CREATE_TIME, TENANT_ID);

CREATE INDEX BATCH_JOB_EXECUTION_I11 on BATCH_JOB_EXECUTION
(STATUS, JOB_TYPE, CREATE_TIME, TENANT_ID);

CREATE SEQUENCE BATCH_JOB_EXECUTION_SEQ;

CREATE TABLE BATCH_STEP_EXECUTION
(
  JOB_ID					NUMERIC(19)		NOT NULL,
  STEP_ID					NUMERIC(19)		NOT NULL,
  STEP_NAME					VARCHAR(500)	NOT NULL,
  STATUS            		VARCHAR(20),
  EXIT_MESSAGE      		VARCHAR(2500),
  LOG_FILE         			VARCHAR(500),
  CREATE_TIME				TIMESTAMP(6),
  UPDATE_TIME				TIMESTAMP(6),
  SCHEDULE_TIME				TIMESTAMP(6),
  SHORT_CONTEXT 			VARCHAR(2500),
  SERIALIZED_CONTEXT 		TEXT,
  CPU_CURRENT				NUMERIC(5,2),
  CPU_AVERAGE				NUMERIC(5,2),
  MEMORY_TOTAL				NUMERIC(20),
  MEMORY_FREE				NUMERIC(20),
  CURRENT_COUNT				NUMERIC(38),
  TOTAL_COUNT				NUMERIC(38),
  COMMIT_COUNT				NUMERIC(38),
  VERSION 					NUMERIC(19,0),
  MAX_COMMIT_INTERVAL NUMERIC(38)
);

CREATE UNIQUE INDEX BATCH_STEP_EXECUTION_PK ON BATCH_STEP_EXECUTION
(JOB_ID, STEP_ID);

CREATE INDEX BATCH_STEP_EXECUTION_I1 ON BATCH_STEP_EXECUTION
(STEP_ID, STATUS);

CREATE SEQUENCE BATCH_STEP_EXECUTION_SEQ;

CREATE TABLE BATCH_RESOURCE_EXECUTION
(
  JOB_ID					NUMERIC(19)		NOT NULL,
  STEP_ID        			NUMERIC(19)		NOT NULL,
  RESOURCE_NAME 			VARCHAR(500) 	NOT NULL,
  URL						VARCHAR(2000),
  IO_TYPE        			VARCHAR(10)		NOT NULL,
  RESOURCE_TYPE				VARCHAR(10),
  STATUS         			VARCHAR(10),
  CURRENT_COUNT				NUMERIC(38),
  COMMIT_POS				NUMERIC(38),
  COMMIT_COUNT				NUMERIC(38),
  CREATE_TIME    			TIMESTAMP(6),
  UPDATE_TIME    			TIMESTAMP(6)
);

CREATE UNIQUE INDEX BATCH_RESOURCE_EXECUTION_PK ON BATCH_RESOURCE_EXECUTION
(JOB_ID, STEP_ID, RESOURCE_NAME);

CREATE INDEX BATCH_RESOURCE_EXECUTION_I1 ON BATCH_RESOURCE_EXECUTION
(STEP_ID, RESOURCE_NAME);

CREATE INDEX BATCH_RESOURCE_EXECUTION_I2 ON BATCH_RESOURCE_EXECUTION
(URL, STATUS);


-- BATCH ADMIN DDL
CREATE TABLE BATCH_JOB_GROUP
(
	GROUP_NAME					VARCHAR(500) 	NOT NULL,
	DESCRIPTION					VARCHAR(4000),
  TARGET              VARCHAR(100),
  TARGET_TYPE         VARCHAR(30),
  ENABLE              CHAR(1),
  CONCURRENT          CHAR(1),
  CONCURRENT_COUNT    DECIMAL(20,0),
  WINDOW_ENABLE       CHAR(1),
  WINDOW_FROM         VARCHAR(40),
  WINDOW_TO           VARCHAR(40),
  TO_MINUTE           VARCHAR(40),
  FROM_MINUTE         VARCHAR(40),
  LOG_LEVEL           VARCHAR(20),
  TENANT_ID VARCHAR(50) NOT NULL
);

CREATE UNIQUE INDEX BATCH_JOB_GROUP_PK ON BATCH_JOB_GROUP (GROUP_NAME, TENANT_ID);

CREATE TABLE BATCH_JOB_GROUP_NOTICE
(
  GROUP_NAME        VARCHAR(500) NOT NULL,
  TARGET_TYPE       VARCHAR(100) NOT NULL,
  SEND_TYPE         VARCHAR(100) NOT NULL,
  NOTICE_START      CHAR(1),
  NOTICE_COMPLETE   CHAR(1),
  NOTICE_ERROR      CHAR(1),
  TENANT_ID VARCHAR(50) NOT NULL
);

CREATE UNIQUE INDEX BATCH_JOB_GROUP_NOTICE_PK ON BATCH_JOB_GROUP_NOTICE (GROUP_NAME, TARGET_TYPE, TENANT_ID);

CREATE TABLE BATCH_JOB (
	JOB_NAME 					  VARCHAR(500) 	NOT NULL,
	LOCATION 					  VARCHAR(1000),
	AUTHOR 						  VARCHAR(200) 	NOT NULL,
	GROUP_NAME 					VARCHAR(500),
	DESCRIPTION 				VARCHAR(4000),
	PARAMETERS 					VARCHAR(4000),
	CREATE_TIME 				TIMESTAMP,
	MODIFY_TIME					TIMESTAMP,
	TARGET	  					VARCHAR(100),
	ENABLE 		  				CHAR(1),
	CONCURRENT 					CHAR(1),
	CONCURRENT_COUNT		NUMERIC(20),
	WINDOW_ENABLE 			CHAR(1),
	WINDOW_FROM					VARCHAR(40),
	WINDOW_TO				  	VARCHAR(40),
	LOG_LEVEL 				 	VARCHAR(20),
	COMMAND            	VARCHAR(500),  -- SHELL 일 경우 명령어
	DIRECTORY        	  VARCHAR(500),  -- SHELL 일 경우 명령어 있는 디렉토리
	JOB_TYPE					  VARCHAR(30),   -- BATCH / SHELL
	TARGET_TYPE					VARCHAR(30),
	EXECUTION_TYPE			VARCHAR(30),
  GROUP_POLICY CHAR(1),
  TENANT_ID VARCHAR(50) NOT NULL
);

CREATE UNIQUE INDEX BATCH_JOB_PK ON BATCH_JOB (JOB_NAME, TENANT_ID);
UPDATE BATCH_JOB SET JOB_TYPE = 'BATCH';


CREATE TABLE BATCH_JOB_NOTICE
(
	JOB_NAME 					VARCHAR(500) 	NOT NULL,
	TARGET_TYPE 				VARCHAR(100) 	NOT NULL,
	SEND_TYPE 					VARCHAR(100) 	NOT NULL,
	NOTICE_START 				CHAR(1),
	NOTICE_COMPLETE 			CHAR(1),
	NOTICE_ERROR 				CHAR(1),
  GROUP_POLICY CHAR(1),
  TENANT_ID VARCHAR(50) NOT NULL
);

CREATE UNIQUE INDEX BATCH_JOB_NOTICE_PK ON BATCH_JOB_NOTICE (JOB_NAME, TARGET_TYPE, TENANT_ID);


CREATE TABLE BATCH_DAEMON (
	-- definition
	DAEMON_NAME 				VARCHAR(500) 	NOT NULL,
	DESCRIPTION 				VARCHAR(4000),
	TARGET						VARCHAR(100),
	SERVER						VARCHAR(100),
	CREATE_TIME 				TIMESTAMP,
	MODIFY_TIME					TIMESTAMP,

	-- policy
	ENABLE 						CHAR(1),
	AUTO_RESTART				CHAR(1),

	-- execution
	STATUS						VARCHAR(20),
	PID							VARCHAR(30),
	START_TIME					TIMESTAMP,
	UPDATE_TIME 				TIMESTAMP,
	LOG_FILE         			VARCHAR(1000),
	EXIT_MESSAGE				VARCHAR(4000),

	--notice
	AUTHOR 						VARCHAR(200),
	NOTICE_ADMIN_TYPE 			VARCHAR(100),
	NOTICE_ADMIN_START 			CHAR(1),
	NOTICE_ADMIN_END 			CHAR(1),
	NOTICE_AUTHOR_TYPE 			VARCHAR(100),
	NOTICE_AUTHOR_START 		CHAR(1),
	NOTICE_AUTHOR_END 			CHAR(1),
	NOTICE_INTERVAL   			NUMERIC(4),

	-- health
	THREAD_COUNT			NUMERIC(4),
	CPU_CURRENT				NUMERIC(10,5),
	CPU_AVERAGE				NUMERIC(10,5),
	MEMORY_TOTAL			NUMERIC(20),
	MEMORY_FREE				NUMERIC(20),
	TENANT_ID VARCHAR(50) NOT NULL
);

CREATE UNIQUE INDEX BATCH_DAEMON_PK ON BATCH_DAEMON (DAEMON_NAME, TENANT_ID);



CREATE TABLE BATCH_DAEMON_TRIGGER (
	-- definition
	DAEMON_NAME 				VARCHAR(500) 	NOT NULL,
	TRIGGER_NAME				VARCHAR(500) 	NOT NULL,
	JOB_LOCATION				VARCHAR(1000) 	NOT NULL,	-- BATCH JOB LOCATION (CFG.XML)
	AUTHOR 						VARCHAR(20) 	NOT NULL,
	DESCRIPTION 				VARCHAR(4000),
	CREATE_TIME 				TIMESTAMP,
	MODIFY_TIME					TIMESTAMP,

	-- parameters
	PARAMETERS 					VARCHAR(4000),

	-- trigger
	TYPE 						VARCHAR(20),	-- TRIGGER TYPE: FILE | TIMER | SCHEDULE
	FIXED_RATE 					CHAR(1),
	INPUT_DIRECTORY 			VARCHAR(1000),
	INPUT_FILE 					VARCHAR(4000),
	OUTPUT_DIRECTORY 			VARCHAR(1000),
	SCHEDULE 					VARCHAR(200),
	TIMER_INTERVAL 				NUMERIC(20),

	-- policy
	ENABLE 						CHAR(1),
	CONCURRENT 					CHAR(1),
	WINDOW_ENABLE 				CHAR(1),
	WINDOW_FROM					VARCHAR(40),
	WINDOW_TO					VARCHAR(40),
	LOG_LEVEL 					VARCHAR(20),

	-- execution
	STATUS						VARCHAR(20),
	TOTAL_EXECUTION 			NUMERIC(20),
	START_TIME					TIMESTAMP,
	LAST_EXECUTION 				TIMESTAMP,
	LOG_FILE         			VARCHAR(1000),
	EXIT_MESSAGE				VARCHAR(4000),
	TENANT_ID VARCHAR(50) NOT NULL
);

CREATE UNIQUE INDEX BATCH_DAEMON_TRIGGER_PK ON BATCH_DAEMON_TRIGGER (DAEMON_NAME, TRIGGER_NAME, TENANT_ID);

CREATE TABLE BATCH_SERVER (
		NAME 				VARCHAR(500) 	NOT NULL,
		SERVER_GROUP_NAME   VARCHAR(500) 	NOT NULL,
		DESCRIPTION 		VARCHAR(4000),
		MAX_JOB 			NUMERIC(20),
		BLOCK 				CHAR(1),
		ALLOW_KILL 			CHAR(1),
		ALLOW_RUN 			CHAR(1),
		ALLOW_STOP 			CHAR(1),
		ALLOW_ADDRESS 		VARCHAR(4000),
		PRIORITY			NUMERIC(1),
		CPU_CURRENT			NUMERIC(10,5)	DEFAULT 0,
		TENANT_ID VARCHAR(50) NOT NULL
	);

CREATE UNIQUE INDEX BATCH_SERVER_PK ON BATCH_SERVER (NAME, TENANT_ID);

CREATE TABLE BATCH_AGENT (
		NAME 				VARCHAR(500) 	NOT NULL,
		SERVER_NAME 		VARCHAR(500) 	NOT NULL,
		URL 				VARCHAR(1000),
		STATUS 				VARCHAR(30),
		DESCRIPTION 		VARCHAR(4000),
		CPU_CURRENT			NUMERIC(10,5),
		MEMORY_TOTAL		NUMERIC(20),
		MEMORY_FREE			NUMERIC(20),
		TENANT_ID VARCHAR(50) NOT NULL
);

CREATE UNIQUE INDEX BATCH_AGENT_PK ON BATCH_AGENT (NAME, SERVER_NAME, TENANT_ID);

CREATE TABLE BATCH_JOB_SCHEDULE
(
  JOB_NAME        VARCHAR(100)          NOT NULL,
  PERIOD_DAY_TYPE    VARCHAR(10),
  PERIOD_TIME_TYPE   VARCHAR(10),
  START_DAY          DATE,
  START_FG           VARCHAR(1),
  EXPIRED_DAY        DATE,
  EXPIRED_FG         VARCHAR(1),
  EXECUTION_TIME     DATE,
  SCHEDULE_MONTHDAY  NUMERIC(10),
  SCHEDULE_WEEKDAY   NUMERIC(3),
  SCHEDULE_WEEK      NUMERIC(3),
  SCHEDULE_MONTH     NUMERIC(4),
  PERIOD_INTERVAL    NUMERIC(5),
  EXECUTION_MIN      NUMERIC(2),
  EXECUTION_SEC      NUMERIC(2),
  SCHEDULE_HOUR      NUMERIC(8),
  SCHEDULE_MIN       NUMERIC(19),
  SCHEDULE_SEC       NUMERIC(19),
  START_TIME_HOUR      NUMERIC(2),
  START_TIME_MIN     NUMERIC(2),
  EXPIRED_TIME_HOUR  NUMERIC(2),
  EXPIRED_TIME_MIN   NUMERIC(2),
  TIME_INTERVAL      NUMERIC(5),
  TIME_INTERVAL_UNIT VARCHAR(10),
  TIME_INTERVAL_TYPE VARCHAR(10),
  CRON_STRING          VARCHAR(100),
  TIMEZONE_ID     VARCHAR(100),
  TENANT_ID VARCHAR(50) NOT NULL,
  CONSTRAINT BATCH_JOB_SCHEDULE_PK PRIMARY KEY (JOB_NAME, TENANT_ID)
);

CREATE TABLE BATCH_JOB_SCHEDULE_ONCE_TIME
(
  JOB_NAME            VARCHAR(100)      NOT NULL,
  ONCE_TIME_SEQ       NUMERIC(10)       NOT NULL,
  SCHE_HOUR              NUMERIC(2)              DEFAULT '0',
  SCHE_MIN               NUMERIC(2)              DEFAULT '0',
  SCHE_SEC               NUMERIC(2)              DEFAULT '0',
  TENANT_ID VARCHAR(50) NOT NULL,
  CONSTRAINT BATCH_SCHEDULE_ONCE_TIME_PK PRIMARY KEY (JOB_NAME, ONCE_TIME_SEQ, TENANT_ID),
  CONSTRAINT BATCH_SCHEDULE_ONCE_TIME_FK FOREIGN KEY (JOB_NAME, TENANT_ID)  REFERENCES BATCH_JOB_SCHEDULE (JOB_NAME, TENANT_ID)
);


CREATE TABLE BATCH_JOB_SCHEDULE_ONCE_DATE
(
  JOB_NAME      VARCHAR(100)            NOT NULL,
  ONCE_DATE_SEQ       NUMERIC(10)       NOT NULL,
  SCHE_YEAR         VARCHAR(4),
  SCHE_MONTH        VARCHAR(2),
  SCHE_DAY          VARCHAR(2),
  TENANT_ID VARCHAR(50) NOT NULL,
  CONSTRAINT BATCH_SCHEDULE_ONCE_DATE_PK PRIMARY KEY (JOB_NAME, ONCE_DATE_SEQ, TENANT_ID),
  CONSTRAINT BATCH_SCHEDULE_ONCE_DATE_FK FOREIGN KEY (JOB_NAME, TENANT_ID)  REFERENCES BATCH_JOB_SCHEDULE (JOB_NAME, TENANT_ID)
);


CREATE TABLE BATCH_PRE_JOB
(
  JOB_NAME VARCHAR(500)   NOT NULL,
  PRE_JOB_SEQ NUMERIC(10)   NOT NULL,
  PRE_JOB_NAME VARCHAR(500)   NOT NULL,
  TENANT_ID VARCHAR(50) NOT NULL,
  CONSTRAINT BATCH_PRE_JOB_PK PRIMARY KEY (JOB_NAME, PRE_JOB_SEQ, TENANT_ID)
);


/*create table BATCH_CONFIG
(
  SCHEDULING_TIME       VARCHAR(30)      NOT NULL,
  LEADER_ADMIN_NAME      VARCHAR(100)     ,
  LEADER_ADMIN_UPDATE_TIME TIMESTAMP,
  CONSTRAINT BATCH_CONFIG_PK PRIMARY KEY (SCHEDULING_TIME)
);*/

create table BATCH_CONFIG
(
  SCHEDULING_TIME       VARCHAR(30)      NOT NULL,
  TENANT_ID             VARCHAR(50)      NOT NULL,
  CONSTRAINT BATCH_CONFIG_PK PRIMARY KEY (SCHEDULING_TIME, TENANT_ID)
);

create table BATCH_ADMIN_LEADER
(
  LEADER_ADMIN_NAME      VARCHAR(100),
  LEADER_ADMIN_UPDATE_TIME TIMESTAMP
);

INSERT INTO BATCH_ADMIN_LEADER(LEADER_ADMIN_NAME, LEADER_ADMIN_UPDATE_TIME) VALUES (NULL, NULL);

CREATE TABLE BATCH_SERVER_GROUP
(
  NAME VARCHAR(500) NOT NULL,
  DESCRIPTION VARCHAR(4000),
  ALGORITHM VARCHAR(30),
  TENANT_ID VARCHAR(50) NOT NULL,
  CONSTRAINT BATCH_SERVER_GROUP_PK PRIMARY KEY (NAME, TENANT_ID)
);



-- 실행 이벤트 저장

CREATE TABLE BATCH_JOB_EXECUTION_EVENT
(
  JOB_ID      NUMERIC(19)                       NOT NULL,
  EVENT_DATE  NUMERIC(20)                 NOT NULL,
  EVENT_INFO  VARCHAR(100),
  TENANT_ID VARCHAR(50) NOT NULL,
  CONSTRAINT BATCH_JOB_EXECUTION_EVENT_PK PRIMARY KEY (JOB_ID, EVENT_DATE)
);

CREATE TABLE BATCH_TIMEZONE
(
  TIMEZONE_ID VARCHAR(100),
  DEFAULT_YN VARCHAR(1),
  TENANT_ID VARCHAR(50) NOT NULL
);




CREATE TABLE BATCH_REPLACE_PARAM
(
  REPLACE_KEY VARCHAR(100),
  REPLACE_TYPE VARCHAR(30),
  REPLACE_VALUE VARCHAR(100),
  REPLACE_OFFSET NUMERIC(2),
  TENANT_ID VARCHAR(50) NOT NULL,
  CONSTRAINT BATCH_REPLACE_PARAM_PK PRIMARY KEY (REPLACE_KEY, TENANT_ID)
);


---- 2021-03-17 추가 ----
CREATE INDEX BJE_INDEX1 ON BATCH_JOB_EXECUTION(MONITOR_CHECK_YN);
CREATE INDEX BJE_INDEX2 ON BATCH_JOB_EXECUTION(SCHEDULE_TIME);


INSERT INTO AFT_ROLE(ROLE_ID, ROLE_NAME, DESCRIPTION, CREATE_ID, CREATE_DATE, TENANT_ID)
VALUES ('5000', 'Online Manager', 'Online Manager', 'system', '20130614000000', 'tenantIdA');

INSERT INTO AFT_ROLE_LOCALE(ROLE_ID,LOCALE,ROLE_NAME,TENANT_ID)
VALUES ('5000','ko_KR','온라인 관리자', 'tenantIdA');
INSERT INTO AFT_ROLE_LOCALE(ROLE_ID,LOCALE,ROLE_NAME,TENANT_ID)
VALUES ('5000','en_US','Online Manager', 'tenantIdA');

INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('5000','5000','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('5000','5010','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('5000','5100','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('5000','5200','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('5000','5300','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('5000','5400','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('5000','5500','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('5000','5502','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('5000','5503','tenantIdA');
--INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('5000','5920','tenantIdA');

----------------------------------------------------------
----------------------centercut------------------------------
----------------------------------------------------------



CREATE TABLE AFCC_DOMAIN_CONFIG
(
	DOMAIN_ID VARCHAR(200) NOT NULL,
	DOMAIN_NAME VARCHAR(200) NOT NULL,
	DESCRIPTION VARCHAR(4000),
	CREATE_ID VARCHAR(200),
	CREATE_TIME TIMESTAMP,
	UPDATE_ID VARCHAR(200),
	UPDATE_TIME TIMESTAMP,
	CONSTRAINT AFCC_DOMAIN_PK PRIMARY KEY (DOMAIN_ID)
);

CREATE TABLE AFCC_AGENT_CONFIG
(
	AGENT_ID VARCHAR(200) NOT NULL,
	AGENT_NAME VARCHAR(200) NOT NULL,
	AGENT_URL VARCHAR(500) NOT NULL,
	DESCRIPTION VARCHAR(4000),
	DOMAIN_ID VARCHAR(200) NOT NULL,
	MAX_THREAD_COUNT DECIMAL(4) NOT NULL,
	MAX_CPU_USAGE DECIMAL(3) DEFAULT 100,
	ASSIGNED_COUNT DECIMAL(4) DEFAULT 0,
	ALIVE CHAR(1) DEFAULT '0',
	ENABLE CHAR(1) DEFAULT '1',
	HOST_NAME VARCHAR(200),
	CREATE_ID VARCHAR(200),
	CREATE_TIME TIMESTAMP,
	UPDATE_ID VARCHAR(200),
	UPDATE_TIME TIMESTAMP,
	CONSTRAINT AFCC_AGENT_PK PRIMARY KEY (AGENT_ID),
	CONSTRAINT AFCC_AGENT_FK01 FOREIGN KEY (DOMAIN_ID) REFERENCES AFCC_DOMAIN_CONFIG(DOMAIN_ID)
);

CREATE TABLE AFCC_JOB_GROUP
(
	GROUP_ID 		VARCHAR(200) NOT NULL,
	GROUP_NAME 		VARCHAR(200) NOT NULL,
	DESCRIPTION 	VARCHAR(4000),
	CREATE_ID 		VARCHAR(200),
	CREATE_TIME 	TIMESTAMP,
	UPDATE_ID 		VARCHAR(200),
	UPDATE_TIME		TIMESTAMP,
	CONSTRAINT AFCC_JOB_GROUP_PK PRIMARY KEY (GROUP_ID)
);

CREATE TABLE AFCC_JOB_CONFIG
(
	JOB_ID 					VARCHAR(100) NOT NULL,
	JOB_NAME 				VARCHAR(200) NOT NULL,
	DESCRIPTION 			VARCHAR(4000),
	GROUP_ID				VARCHAR(200),
	DOMAIN_ID 				VARCHAR(200) NOT NULL,
	HEAD_SERVICE_ID 		VARCHAR(500),
	BODY_SERVICE_ID 		VARCHAR(500) NOT NULL,
	TAIL_SERVICE_ID 		VARCHAR(500),
	TARGET_INPUT_TABLE 		VARCHAR(500) NOT NULL,
	JOB_PRE_PROCESSOR 		VARCHAR(500),
	JOB_POST_PROCESSOR 		VARCHAR(500),
	CHUNK_PRE_PROCESSOR 	VARCHAR(500),
	CHUNK_POST_PROCESSOR 	VARCHAR(500),
	HEAD_INTERCEPTOR 		VARCHAR(500),
	BODY_INTERCEPTOR 		VARCHAR(500),
	TAIL_INTERCEPTOR 		VARCHAR(500),
	ITEM_READER				VARCHAR(500) NOT NULL,
	EXECUTION_POLICY 		VARCHAR(20)  NOT NULL,
	PARTITION_POLICY 		VARCHAR(20),
	CHUNK_SIZE 				DECIMAL(10)  NOT NULL,
	MAX_THREAD_COUNT 		DECIMAL(4),
	MAX_ERROR_RATE 			DECIMAL(3),
	MAX_ERROR_REPEAT_COUNT	DECIMAL(4),
	AUTO_RETRY_COUNT 		DECIMAL(1),
	PROCESSING_INTERVAL 	DECIMAL(5),
	TIMEOUT	 				DECIMAL(5) DEFAULT -1 NOT NULL,
	LOGGING					CHAR(1) DEFAULT '0',
	LOG_LEVEL				VARCHAR(20),
	SIMULATION				CHAR(1) DEFAULT '0',
	SYSTEM_ERROR_RETRY CHAR(1) DEFAULT '0',
	CREATE_ID 				VARCHAR(200),
	CREATE_TIME 			TIMESTAMP,
	UPDATE_ID 				VARCHAR(200),
	UPDATE_TIME 			TIMESTAMP,
	CONSTRAINT AFCC_JOB_CONFIG_PK PRIMARY KEY (JOB_ID),
	CONSTRAINT AFCC_JOB_CONFIG_FK01 FOREIGN KEY (DOMAIN_ID) REFERENCES AFCC_DOMAIN_CONFIG(DOMAIN_ID),
	CONSTRAINT AFCC_JOB_CONFIG_FK02 FOREIGN KEY (GROUP_ID) REFERENCES AFCC_JOB_GROUP(GROUP_ID)
);

CREATE TABLE AFCC_JOB_INSTANCE
(
	JOB_ID 					VARCHAR(100) NOT NULL,
	EXEC_DATE 				CHAR(8) NOT NULL,
	EXEC_SEQ 				DECIMAL(5) NOT NULL,
	INSTANCE_STATUS 		VARCHAR(200),
	APP_ID					VARCHAR(200),
	APP_SEQ					DECIMAL(2),
	DOMAIN_ID 				VARCHAR(200) NOT NULL,
	HEAD_SERVICE_ID 		VARCHAR(500),
	BODY_SERVICE_ID 		VARCHAR(500) NOT NULL,
	TAIL_SERVICE_ID 		VARCHAR(500),
	TARGET_INPUT_TABLE 		VARCHAR(500) NOT NULL,
	JOB_PRE_PROCESSOR 		VARCHAR(500),
	JOB_POST_PROCESSOR 		VARCHAR(500),
	CHUNK_PRE_PROCESSOR 	VARCHAR(500),
	CHUNK_POST_PROCESSOR 	VARCHAR(500),
	HEAD_INTERCEPTOR 		VARCHAR(500),
	BODY_INTERCEPTOR 		VARCHAR(500),
	TAIL_INTERCEPTOR 		VARCHAR(500),
	ITEM_READER				VARCHAR(500) NOT NULL,
	EXECUTION_POLICY 		VARCHAR(20) NOT NULL,
	PARTITION_POLICY 		VARCHAR(20),
	CHUNK_SIZE 				DECIMAL(10) NOT NULL,
	MAX_THREAD_COUNT 		DECIMAL(4),
	MAX_ERROR_RATE 			DECIMAL(3),
	MAX_ERROR_REPEAT_COUNT	DECIMAL(4),
	AUTO_RETRY_COUNT 		DECIMAL(1),
	PROCESSING_INTERVAL 	DECIMAL(5),
	TIMEOUT	 				DECIMAL(5) DEFAULT -1,
	LOGGING					CHAR(1) DEFAULT '0',
	LOG_LEVEL				VARCHAR(20),
	SIMULATION				CHAR(1) DEFAULT '0',
	SYSTEM_ERROR_RETRY CHAR(1) DEFAULT '0',
	REPROCESS_COUNT 		DECIMAL(2) DEFAULT -1,
	INPUT_COUNT 			DECIMAL(10),
	INPUT_TOTAL 			DECIMAL(20,5),
	SUCCESS_COUNT 			DECIMAL(10),
	SUCCESS_TOTAL 			DECIMAL(20,5),
	FAIL_COUNT 				DECIMAL(10),
	FAIL_TOTAL 				DECIMAL(20,5),
	BIZ_FAIL_COUNT 			DECIMAL(10),
	BIZ_FAIL_TOTAL 			DECIMAL (20,5),
	PRE_START_TIME 			TIMESTAMP,
	PRE_END_TIME 			TIMESTAMP,
	MAIN_START_TIME 		TIMESTAMP,
	MAIN_END_TIME 			TIMESTAMP,
	POST_START_TIME 		TIMESTAMP,
	POST_END_TIME 			TIMESTAMP,
	EXIT_MESSAGE			TEXT,
	CREATE_ID 				VARCHAR(200),
	CREATE_TIME				TIMESTAMP,
	UPDATE_ID 				VARCHAR(200),
	UPDATE_TIME 			TIMESTAMP,
	CONSTRAINT AFCC_JOB_INSTANCE_PK PRIMARY KEY (JOB_ID, EXEC_DATE, EXEC_SEQ)
);

CREATE TABLE AFCC_CHUNK
(
	JOB_ID VARCHAR(100) NOT NULL,
	EXEC_DATE CHAR(8) NOT NULL,
	EXEC_SEQ DECIMAL(5) NOT NULL,
	CHUNK_SEQ DECIMAL(20) NOT NULL,
	START_INDEX DECIMAL(20) NOT NULL,
	END_INDEX DECIMAL(20) NOT NULL,
	THREAD_GROUP VARCHAR(200),
	AGENT_ID VARCHAR(200),
	CHUNK_STATUS VARCHAR(200),
	RETRY_COUNT DECIMAL(2) DEFAULT -1,
	MONITOR_CHECK CHAR(1) DEFAULT '0',
	INPUT_COUNT DECIMAL(10),
	INPUT_TOTAL DECIMAL(20,5),
	SUCCESS_COUNT DECIMAL(10),
	SUCCESS_TOTAL DECIMAL(20,5),
	FAIL_COUNT DECIMAL(10),
	FAIL_TOTAL DECIMAL(20,5),
	BIZ_FAIL_COUNT DECIMAL(10),
	BIZ_FAIL_TOTAL DECIMAL(20,5),
	PRE_START_TIME TIMESTAMP,
	PRE_END_TIME TIMESTAMP,
	MAIN_START_TIME TIMESTAMP,
	MAIN_END_TIME TIMESTAMP,
	POST_START_TIME TIMESTAMP,
	POST_END_TIME TIMESTAMP,
	EXIT_MESSAGE TEXT,
	CREATE_ID VARCHAR(200),
	CREATE_TIME TIMESTAMP,
	UPDATE_ID VARCHAR(200),
	UPDATE_TIME TIMESTAMP,
	CONSTRAINT AFCC_CHUNK_PK PRIMARY KEY (JOB_ID, EXEC_DATE, EXEC_SEQ, CHUNK_SEQ)
);

CREATE INDEX AFCC_CHUNK_IDX01 ON AFCC_CHUNK (AGENT_ID);
CREATE INDEX AFCC_CHUNK_IDX02 ON AFCC_CHUNK (MONITOR_CHECK);

CREATE TABLE AFCC_EXEC_EVENT
(
	JOB_ID 		VARCHAR(200) NOT NULL,
	EXEC_DATE 	CHAR(8) NOT NULL,
	EXEC_SEQ 	DECIMAL(5) NOT NULL,
	EVENT_NAME 	VARCHAR(200) NOT NULL,
	OCCUR_TIME 	TIMESTAMP NOT NULL,
	DESCRIPTION VARCHAR(500) NOT NULL
);

CREATE INDEX AFCC_EXEC_EVENT_IDX01 ON AFCC_EXEC_EVENT(JOB_ID, EXEC_DATE, EXEC_SEQ);


CREATE TABLE AFCC_SYS_CONTROL
(
	AUTO_RECOVERY CHAR(1) DEFAULT '0' NOT NULL,
	ALLOW_EMPTY_JOB CHAR(1) DEFAULT '1' NOT NULL,
	ALLOW_UNIT_TEST CHAR(1) DEFAULT '0' NOT NULL,
	ALLOW_DELETE_JOB CHAR(1) DEFAULT '0' NOT NULL,
	ALLOW_BLOCK_JOB CHAR(1) DEFAULT '0' NOT NULL
);

CREATE TABLE AFCC_LEADER_INFO
(
	ADMIN_ID VARCHAR(200),
	ADMIN_CHECK_TIME TIMESTAMP
);


CREATE TABLE AFCC_SUSPEND_TIME
(
	START_TIME CHAR(4) NOT NULL,
	END_TIME CHAR(4) NOT NULL
);

CREATE TABLE AFCC_ERROR_INFO
(
	JOB_ID VARCHAR(100) NOT NULL,
	EXEC_DATE CHAR(8) NOT NULL,
	EXEC_SEQ DECIMAL(5) NOT NULL,
	CHUNK_SEQ DECIMAL(20) NOT NULL,
	DATA_SEQ DECIMAL(20) NOT NULL,
	REPROCESS_COUNT DECIMAL(5) NOT NULL,
	RETRY_COUNT DECIMAL(5) NOT NULL,
	STACK_TRACE VARCHAR(4000),
	EXCEPTION_MESSAGE VARCHAR(1000),
	OCCUR_TIME TIMESTAMP,
	EXECUTION_ID VARCHAR(200),
	CREATE_ID VARCHAR(200),
	CREATE_TIME TIMESTAMP,
	UPDATE_ID VARCHAR(200),
	UPDATE_TIME TIMESTAMP
);


CREATE INDEX AFCC_ERROR_INFO_IDX01 ON AFCC_ERROR_INFO(JOB_ID, EXEC_DATE, EXEC_SEQ, CHUNK_SEQ, DATA_SEQ);

CREATE TABLE AFCC_JOB_INSTANCE_PARAMS
(
	JOB_ID VARCHAR(200) NOT NULL,
	EXEC_DATE CHAR(8) NOT NULL,
	EXEC_SEQ DECIMAL(5) NOT NULL,
	PARAM_KEY VARCHAR(200) NOT NULL,
	PARAM_VALUE VARCHAR(200) NOT NULL
);

CREATE INDEX AFCC_JOB_INSTANCE_PARAMS_IDX01 ON AFCC_JOB_INSTANCE_PARAMS(JOB_ID, EXEC_DATE, EXEC_SEQ);



CREATE TABLE AFCC_APPLICATION
(
	APP_ID VARCHAR(200) NOT NULL,
	APP_NAME VARCHAR(200) NOT NULL,
	DESCRIPTION VARCHAR(4000),
	CONSTRAINT AFCC_APPLICATION_PK PRIMARY KEY (APP_ID)
);


CREATE TABLE AFCC_APPLICATION_JOBS
(
	APP_ID VARCHAR(200) NOT NULL,
	JOB_ID VARCHAR(200) NOT NULL,
	APP_SEQ DECIMAL(2) NOT NULL,
	CONSTRAINT AFCC_APPLICATION_JOBS_PK PRIMARY KEY (APP_ID, JOB_ID),
	CONSTRAINT AFCC_APPLICATION_JOBS_FK01 FOREIGN KEY (APP_ID) REFERENCES AFCC_APPLICATION(APP_ID),
	CONSTRAINT AFCC_APPLICATION_JOBS_FK02 FOREIGN KEY (JOB_ID) REFERENCES AFCC_JOB_CONFIG(JOB_ID)
);

CREATE TABLE AFT_CPU_USAGE
(
	HOST_NAME VARCHAR(200) NOT NULL,
	CPU_USAGE DECIMAL(5,2) DEFAULT 0,
	CONSTRAINT AFCC_CPU_USAGE_PK PRIMARY KEY (HOST_NAME)
);

CREATE TABLE SAMPLE_INPUT_TABLE
(
	JOB_ID VARCHAR(200) NOT NULL,
	EXEC_DATE CHAR(8) NOT NULL,
	EXEC_SEQ DECIMAL(4) NOT NULL,
	DATA_SEQ DECIMAL(20) NOT NULL,
	THREAD_GROUP VARCHAR(200),
	STATUS_CODE CHAR(2) NOT NULL,
	INPUT_VALUE DECIMAL(20,5),
	OUTPUT_VALUE DECIMAL(20,5),
	TELEGRAM VARCHAR(4000),
	PROCESS_TIME CHAR(14),
	RETRY_COUNT DECIMAL(2) DEFAULT 1,
	DATA_DCD VARCHAR(2),
	CONSTRAINT SAMPLE_INPUT_TABLE_PK PRIMARY KEY (JOB_ID, EXEC_DATE, EXEC_SEQ, DATA_SEQ)
);



-- application
INSERT INTO AFT_APPLICATION (APPL_ID,APPL_NAME,APPL_URL,CREATE_ID) VALUES ('3000','센터컷','/centercut','system');

-- application locale
INSERT INTO AFT_APPLICATION_LOCALE(APPL_ID,LOCALE,APPL_NAME,TENANT_ID) VALUES ('3000','ko_KR','센터컷','tenantIdA');
INSERT INTO AFT_APPLICATION_LOCALE(APPL_ID,LOCALE,APPL_NAME,TENANT_ID) VALUES ('3000','en_US','Centercut','tenantIdA');

-- 테넌트 어플리케이션
INSERT INTO AFT_TENANT_APPL (APPL_ID, TENANT_ID) VALUES('3000', 'tenantIdA');

-- menu
INSERT INTO AFT_MENU(MENU_ID,PARENT_MENU_ID,MENU_SEQ,MENU_NAME,USE_YN,CREATE_ID,APPL_ID,MENU_TYPE,TENANT_ID) VALUES ('3000',null,3,'센터컷','Y','system','3000','MENU','tenantIdA');
INSERT INTO AFT_MENU(MENU_ID,PARENT_MENU_ID,MENU_SEQ,MENU_NAME,USE_YN,CREATE_ID,APPL_ID,MENU_TYPE,TENANT_ID) VALUES ('3100','3000',0,'센터컷 대시보드','Y','system','3000','MENU','tenantIdA');
--INSERT INTO AFT_MENU(MENU_ID,PARENT_MENU_ID,MENU_NAME,USE_YN,CREATE_ID,APPL_ID,MENU_TYPE,TENANT_ID) VALUES ('3100','3000','에이전트관리','Y','system','3000','MENU','tenantIdA');
--INSERT INTO AFT_MENU(MENU_ID,PARENT_MENU_ID,MENU_NAME,USE_YN,CREATE_ID,APPL_ID,MENU_TYPE,TENANT_ID) VALUES ('3110','3000','도메인','Y','system','3000','MENU','tenantIdA');
INSERT INTO AFT_MENU(MENU_ID,PARENT_MENU_ID,MENU_NAME,USE_YN,CREATE_ID,APPL_ID,MENU_TYPE,TENANT_ID) VALUES ('3120','3000','에이전트 관리','Y','system','3000','MENU','tenantIdA');
--INSERT INTO AFT_MENU(MENU_ID,PARENT_MENU_ID,MENU_NAME,USE_YN,CREATE_ID,APPL_ID,MENU_TYPE,TENANT_ID) VALUES ('3200','3000','작업관리','Y','system','3000','MENU','tenantIdA');
INSERT INTO AFT_MENU(MENU_ID,PARENT_MENU_ID,MENU_NAME,USE_YN,CREATE_ID,APPL_ID,MENU_TYPE,TENANT_ID) VALUES ('3210','3000','작업 그룹 관리','Y','system','3000','MENU','tenantIdA');
INSERT INTO AFT_MENU(MENU_ID,PARENT_MENU_ID,MENU_NAME,USE_YN,CREATE_ID,APPL_ID,MENU_TYPE,TENANT_ID) VALUES ('3220','3000','작업 정의','Y','system','3000','MENU','tenantIdA');
INSERT INTO AFT_MENU(MENU_ID,PARENT_MENU_ID,MENU_NAME,USE_YN,CREATE_ID,APPL_ID,MENU_TYPE,TENANT_ID) VALUES ('3230','3000','작업 실행','Y','system','3000','MENU','tenantIdA');
INSERT INTO AFT_MENU(MENU_ID,PARENT_MENU_ID,MENU_NAME,USE_YN,CREATE_ID,APPL_ID,MENU_TYPE,TENANT_ID) VALUES ('3240','3000','작업 실행 모니터링','Y','system','3000','MENU','tenantIdA');
--INSERT INTO AFT_MENU(MENU_ID,PARENT_MENU_ID,MENU_NAME,USE_YN,CREATE_ID,APPL_ID,MENU_TYPE,TENANT_ID) VALUES ('3300','3000','어플리케이션관리','Y','system','3000','MENU','tenantIdA');
--INSERT INTO AFT_MENU(MENU_ID,PARENT_MENU_ID,MENU_NAME,USE_YN,CREATE_ID,APPL_ID,MENU_TYPE,TENANT_ID) VALUES ('3310','3000','어플리케이션정의','Y','system','3000','MENU','tenantIdA');
--INSERT INTO AFT_MENU(MENU_ID,PARENT_MENU_ID,MENU_NAME,USE_YN,CREATE_ID,APPL_ID,MENU_TYPE,TENANT_ID) VALUES ('3320','3000','어플리케이션실행','Y','system','3000','MENU','tenantIdA');
--INSERT INTO AFT_MENU(MENU_ID,PARENT_MENU_ID,MENU_NAME,USE_YN,CREATE_ID,APPL_ID,MENU_TYPE,TENANT_ID) VALUES ('3400','3000','시스템관리','Y','system','3000','MENU','tenantIdA');
INSERT INTO AFT_MENU(MENU_ID,PARENT_MENU_ID,MENU_NAME,USE_YN,CREATE_ID,APPL_ID,MENU_TYPE,TENANT_ID) VALUES ('3410','3000','시스템 정보','Y','system','3000','MENU','tenantIdA');

-- menu locale
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('3000','ko_KR','센터컷','tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('3100','ko_KR','센터컷 대시보드','tenantIdA');
--INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('3100','ko_KR','에이전트관리','tenantIdA');
--INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('3110','ko_KR','도메인','tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('3120','ko_KR','에이전트 관리','tenantIdA');
--INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('3200','ko_KR','작업관리','tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('3210','ko_KR','작업 그룹 관리','tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('3220','ko_KR','작업 정의','tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('3230','ko_KR','작업 실행','tenantIdA');
--INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('3231','ko_KR','작업 완료 이력','tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('3240','ko_KR','작업 실행 모니터링','tenantIdA');
--INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('3300','ko_KR','어플리케이션관리','tenantIdA');
--INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('3310','ko_KR','어플리케이션정의','tenantIdA');
--INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('3320','ko_KR','어플리케이션실행','tenantIdA');
--INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('3400','ko_KR','시스템관리','tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('3410','ko_KR','시스템 정보','tenantIdA');

INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('3000','en_US','Centercut','tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('3100','en_US','Centercut Dashboard','tenantIdA');
--INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('3100','en_US','Agent Management','tenantIdA');
--INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('3110','en_US','Domain','tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('3120','en_US','Agent','tenantIdA');
--INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('3200','en_US','Job Management','tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('3210','en_US','Job Group','tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('3220','en_US','Job Config','tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('3230','en_US','Job Execution','tenantIdA');
--INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('3231','en_US','Job Complete Execution','tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('3240','en_US','Monitor','tenantIdA');
--INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('3300','en_US','Application Management','tenantIdA');
--INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('3310','en_US','Application Config','tenantIdA');
--INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('3320','en_US','Application Execution','tenantIdA');
--INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('3400','en_US','System Management','tenantIdA');
INSERT INTO AFT_MENU_LOCALE(MENU_ID,LOCALE,MENU_NAME,TENANT_ID) VALUES ('3410','en_US','System information','tenantIdA');


-- role
INSERT INTO AFT_ROLE(ROLE_ID,ROLE_NAME,CREATE_ID,TENANT_ID) VALUES ('3000','Centercut 관리자','system','tenantIdA');
INSERT INTO AFT_ROLE(ROLE_ID,ROLE_NAME,CREATE_ID,TENANT_ID) VALUES ('3100','Centercut 업무담당자','system','tenantIdA');

-- role locale
INSERT INTO AFT_ROLE_LOCALE(ROLE_ID,LOCALE,ROLE_NAME,TENANT_ID) VALUES('3000','ko_KR','Centercut 관리자', 'tenantIdA');
INSERT INTO AFT_ROLE_LOCALE(ROLE_ID,LOCALE,ROLE_NAME,TENANT_ID) VALUES('3100','ko_KR','Centercut 업무담당자', 'tenantIdA');

INSERT INTO AFT_ROLE_LOCALE(ROLE_ID,LOCALE,ROLE_NAME,TENANT_ID) VALUES('3000','en_US','Centercut Manager', 'tenantIdA');
INSERT INTO AFT_ROLE_LOCALE(ROLE_ID,LOCALE,ROLE_NAME,TENANT_ID) VALUES('3100','en_US','Centercut User', 'tenantIdA');


INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('3000','3000','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('3000','3100','tenantIdA');
--INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('3000','3100','tenantIdA');
--INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('3000','3110','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('3000','3120','tenantIdA');
--INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('3000','3200','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('3000','3210','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('3000','3220','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('3000','3230','tenantIdA');
--INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('3000','3231','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('3000','3240','tenantIdA');
--INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('3000','3300','tenantIdA');
--INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('3000','3310','tenantIdA');
--INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('3000','3320','tenantIdA');
--INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('3000','3400','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('3000','3410','tenantIdA');

INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('3100','3000','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('3100','3100','tenantIdA');
--INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('3100','3200','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('3100','3230','tenantIdA');
--INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('3100','3231','tenantIdA');
INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('3100','3240','tenantIdA');
--INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('3100','3300','tenantIdA');
--INSERT INTO AFT_ROLE_MENU(ROLE_ID,MENU_ID,TENANT_ID) VALUES ('3100','3320','tenantIdA');


INSERT INTO AFT_USER_ROLE(USER_ID,ROLE_ID,TENANT_ID) VALUES ('admin','3000','tenantIdA');


UPDATE AFT_MENU SET MENU_SEQ = 3 WHERE MENU_ID = '3000';
UPDATE AFT_MENU SET MENU_SEQ = 1 WHERE MENU_ID = '3120';
UPDATE AFT_MENU SET MENU_SEQ = 2 WHERE MENU_ID = '3210';
UPDATE AFT_MENU SET MENU_SEQ = 3 WHERE MENU_ID = '3220';
UPDATE AFT_MENU SET MENU_SEQ = 4 WHERE MENU_ID = '3230';
UPDATE AFT_MENU SET MENU_SEQ = 5 WHERE MENU_ID = '3240';
UPDATE AFT_MENU SET MENU_SEQ = 6 WHERE MENU_ID = '3410';