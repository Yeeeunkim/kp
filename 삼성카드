-프로젝트정보
web/ap scp환경에서 그외서버 on-premise재구성으로 eos sw 전화 및 업그레이드
pjt 명 : 2024년 it인프라 교체 및 구조개선 프로젝트

-프로젝트 작업 순서 
1. 피시환경구성 세팅
2. 소스코드 분석
3. 프로젝트 세팅 
	1) dynamic project 는 default 경로가 WEB-INF/lib	인식해줘서 maven사용 안할 시 WEB-INF/lib안에 넣어서 컴파일 하자!
	2) 1번 안되면 org.eclipse.wst.common.component	파일에서 아래 두개 확인해보자
		- <web-resource deploy-path="/" source-path="/webapp" tag="defaultRootSource"/>
		- <property name="context-root" value="/"/>
3. compile 오류 잡기 
4. runtime 오류 잡기
5. 사용안하는 lib 정제
	1) lib 날리면서 compile, server 기동하면서 확인 
	2) console에 loading xml bean 찍히면 bean 생성확인된 것 !


https://www.egovframe.go.kr/wiki/doku.php?id=egovframework:rtemigration3.0
defultanntationhandlermapping 5버전 안쓰는 오류 8번 참고

web/ap scp 환경 그외 서버 on-premise 재구성으로 eos sw 전환 및 업그레이드
etms 외주tm시스템
easy 경비처리시스템

web iPlanet -> Webtob
ap  JEUS6 EOS로 JEUS8 
dr서버 1대로 축소



- 리눅스 
ctrl + \ 
ctrl + H 
Terminal too wide 나면서 stty columns 160 이라는 명령어를 미리 날리면 문제 안생김 - HP-UX OS 특성
find 경로 -name *.xml -type f | xargs grep 40.2.2.91
find 경로 -type f | xargs grep ZFFIFT_870
less test.log
tail -f test.log -n 1000
cmd창에 curl -v 40.2.2.91:3610

- 구축 범위
easy 
	os		SunOs 5.10 -> RHEL 8.10
			HP-UX 11 -> RHEL 8.10
	web	iplanet -> webtob5
	was	jeus6 -> jeus8

etms
	os		SunOs 5.10 -> RHEL 8.10
	web	Iplanet	-> webtob5
	was 	Weblogic 11 -> JEUS 8
	db		oracle 11g -> oracle 19c 

- asis server 
jeus		/was/jeus6/
source		/gfinance/wasApps
jeus6	/was/jeus6/gfinance/config/midv02/JEUSMain.xml (container로 application확인)

- tobe server
java		/usr/lib/jvm/java-1.8.0
jeus8	/was/jeus8/domains/T-EY11-0	(startEY11-F11.sh / stopEY11-F11.sh)
log		/log/jeus8/T-EY11-0
source		/gfinance/wasApps (java, jsp)
				/gfinance/webApps (js, image)
webtob5	/web/webtob5/domains/T-EY11-W/config
sap 	40.2.2.91 

-easy 시스템 특징
	.do
	.dwr : direct web remoting 	자바로 만든 객체를 스크립트로 컨버팅해서 클라이언트에서 비동기식으로 사용할 수 있도록 해주는 자바 라이브러리
				 web.xml /service/*파일을 호출함
				 context-dwr.xml
					<dwr:configuration 스크립트에서 json방식으로 사용할 데이터 모델객체를 설정
					<dwr:remote javascript="commonServiceAjax"> commonServiceAjax 호출해서 지정 메서드만 사용 

	anyframe	
			tld message 	사용함 /utils.java message.message-utils / anyframe-tags.tld
	damo	
			actionlog	 쿼리찍어줄때 사용함 
			web.xml filter방식으로 actionLogger잡혀있음 패턴은 url 방식
	actionlog
			actionlogconst.java 에서 ACTION_INFO_FILE 정의된 actioninfo.xml 참조하는데 
			screenID	값이 호출되면 sap통신을 통해 log쌓임

-몰랐던 것
.dll 구현체로 함수를 미리 만들어모아 놓은 라이브러리, window운영체제에서 사용하는 실행파이리 형식
			sapjco2는 window/system32 안에 sapjco.dll을 참조하는 방식 (다른 dll 종속성있으니 조심하자)
.jar 인터페이스 
.pointcut	execution 정의된걸 호출시켜 실행 시 제어권 뺏어감



- spring 2->5 변경함수
	AbstractExcelView -> AbstractXlsView ( spring-webmvc-5.2.2.1)

	multivalueMap(key, object) => multivalueMap(key, object) list방식 (spring-core-5.2.2.1)
	자세히쓰면
	Map MultipartFiles = new HashMap(); => MultiValueMap<String, MultipartFile> multipartFiles = new LinkedMultiValueMap<>();	

	org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping 
	=> org.springframework.web.servlet.mvc.method.annotation.ReqeustMappingHandlerMapping	(common-servlet.xml)

	org.springframework.web.servlet.mvc.annotation.AnnotationMethodHAndlerAdapter 
	=>. org.springframework.web.servlet.mvc.method.RequestMappingHandlerAdapter (common-servlet.xml)

	프로젝트 시작하면서 서버 누락된 것
		tomcat 7 미만에서는 javax-servlet-api.jar 
		tomcat 7 이상에서는 servlet-api.jar 

	프로젝트 시작하면서 디비 누락된 것 
		sapjco.jar
	Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException javax.annotation.Resource.lookup()Ljava/lang/String;
	=> jsr-250-ani-1.0.jar 랑 jdk에 있는 인터페이스가 중복되는 부분이 있어서 jsr250-api-1.0.jar 제거 

	com.sap.mw.jco.JCO.Exception => com.sap.conn.jco.JCoException

	.so .jar -> linux 파일들 
	.dll .jar -> window 파일들


	Invocation of init method failed; nested exception is java.lang.Error: java.lang.IllegalStateException: DestinationDataProvider already registered 
		원인 : DestinationDataProvider이 bean 생성시 최초 만들어지는데 해당 메뉴 조회 시에도 만들어지려고 해서 이미 등록된 메서드라고 나오는 오류임 
		해결 : spring에서 기존 context 가져오기 위해서는 아래 소스처럼 수정
			전 :ApplicationContext context = new ClassPathXmlApplicationContext("spring/context-datasource.xml");
			후 :WebApplicationContext context = ContextLoader.getCurrentWebApplicationContext();
 	
	
-interface  추가하는 방법
common-servlet.xml 
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean id="actionLogInterceptor" class="com.sc.gf.actLog.common.ActionLogInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>


추가하고싶은 interface 생성하면 됨 ! 
필자는 spring-webmvc 에서 HandlerInterceptorAdapter 커스텀함 

public class ActionLogInterceptor extends HandlerInterceptorAdapter {
	protected Log log = Log.Factory.getLog(ActionLogInterceptor.class);

@Override
public void postHandler(HttpServletRequest request, HttpServletResponse response, Object handler, @Nullable ModelAndView modelAndView) throws Exception {
		log.debug("========: " + handler.toString();
//		MultiReadHttpServletRequest req = new MultiReadHttpServletRequest((HttpServletRequest)request);
//		new ActionLogSerivce().makeLog(req);
	}

	@Override
	public void afterCompletion( ...
}


-properties 속성가져오는 코드
Properties connectProperties = new Properties();
connectProperties.setProperty(DestinationDataProvider.JCO_AHOST, jcoConnectionInfo.getHostName());
connectProperties.setProperty(DestinationDataProvider.JCO_LANG, "ko");
memoryProvider.changeProperties(jcoCOnnectionInfo.getGroup(), connectProperties);


      

- nosleep.vbs
Set ws = CreateObject("WScript.shell")
Do
				 Wscript.Sleep 120000
				 ws.SendKeys "{SCROLLOCK}{SCROLLLOCK}"
Loop