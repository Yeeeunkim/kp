import java.io.IOException;
import java.util.HashMap;
import java.util.Properties;

import com.sap.conn.jco.JCoExcetpion;
import com.sap.conn.jco.ext.DataProviderException;
import com.sap.conn.jco.ext.DestinationDataEventListener;
import com.sap.conn.jco.ext.DestinationDataProvider;
import com.sap.conn.jco.ext..Environment;
import com.sc.gf.common.BaseCommon;

public class JCOFactory extends BaseCommon {

	private JCOConnectionInfo jcoConnectionInfo;
	
	private InMemoryDestinationDataProvider memoryProvider;

	public JCOConnectionInfo getJcoConnectionInfo(){
		return jcoConnectionInfo;
	}
	public void setJcoConnectionInfo(JCOConnectionInfo jcoConnectionInfo){
		this.jcoConnectionInfo = jcoConnectionInfo;
	}

	//jco 연결 초기화
	private void initJCOPool() {
		memoryProver = new JCOFactory.InMemoryDestinationDataProvider();
		
		try
		{
			Environment.registerDestinationDataProvider(memoryProvider);
		}
		catch ( IllegalStateException provierAlreadyRegisteredException)
		{
			throw new Error(priverAlreadyRegisteredException);
		}
	}
	
	public void refresh() throws Exception {	
		debug("JCO clear success");
	}
	
	public JCOManager getJCOManager() throws IOException {
		Properties connectProperties = new Properties();
	
		//
		if(jcoConnectionInfo.getR3Name().contains("SPD")){
			connectProperties.setProperty(DestinationDataProvier.JCO_MSHOST, jcoConnectionInfo.getHostName());
			connectProperties.setProperty(DestinationDataProvier.JCO_PEAK_LIMIT, jcoConnectionInfo.getMaxConn());
		  connectProperties.setProperty(DestinationDataProvier.JCO_USER, jcoConnectionInfo.getUserName());
      connectProperties.setProperty(DestinationDataProvier.JCO_PASSWD, jcoConnectionInfo.getPasswd());
      connectProperties.setProperty(DestinationDataProvier.JCO_GROUP, jcoConnectionInfo.getGroup());
			connectProperties.setProperty(DestinationDataProvier.JCO_MSHOST, jcoConnectionInfo.getHostName());
		  connectProperties.setProperty(DestinationDataProvier.JCO_R3NAME, jcoConnectionInfo.getR3Name());
		}else if ( jcoConnectionInfo.getR3Name().contains("SQA")) {
			connectProperties.setProperty(DestinationDataProvier.JCO_ASHOST, jcoConnectionInfo.getHostName());
			connectProperties.setProperty(DestinationDataProvier.JCO_SYSNR, jcoConnectionInfo.getSystemNumber());
		  connectProperties.setProperty(DestinationDataProvier.JCO_CLIENT, jcoConnectionInfo.getClient());
      connectProperties.setProperty(DestinationDataProvier.JCO_USER, jcoConnectionInfo.getUserName());
      connectProperties.setProperty(DestinationDataProvier.JCO_PASSWD, jcoConnectionInfo.getPasswd());
		}
		
		memoryProvider.changeProperties(jcoConnectionInfo.getGroup(), connectProperties);
		JCOManager manager = null;
		try {
			manager = new JCOManager(jcoConectionInfo.getGroup();
		}catch(JCoException e)
			e.printStackTrace();
		}
		return manager;
   }
	
	private static calss InMemoryDestinationDataProvider implements DestinationDataProvider 
	{
		private DestinationDataEventListener eL;
		private HashMap<STring, Properties> secureDBStorage = new HashMap<String, Properties>()

		@Override
		public Properties getDestinationProperties(String destinationName)
		{
			Properties p = secureDBStorage.get(destinatinonName);

			if(p!=
		}
	}

	}
}



개발계 운영계 dr 기능 테스트
dr환경 기동 및 테스트 

프로그램 형상관리시스템 promise 내에서 관리한느 약 37개 업무의 어플리케이션 소스 및 데이터베이스의 메타자원을 메타시스템으로 이관하며, 형상관리 프로세스도 arm/메타시스템으로 전화
promise arm 으로 이관
-- jcoManager 
bigdecimal 00.0으로 표기되는 문제
변경 전 
if( value instanceof BigDecimal ) value = value.toString();

변경 후 
if (value instanceof BigDecimal) value= (((BigDecimal) value).compareTo(BigDecimal.ZERO)==0)? "0":value.toString();

if (value instanceof BigDecimal) value = (((BigDecimal) value).compareTo(BigDecimal.ZERO)==0)? "0":value.toString();